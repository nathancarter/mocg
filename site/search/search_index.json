{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome\n\n\nThis website is for the textbook \nIntroduction to the Mathematics of\nComputer Graphics\n,\u00a0published by the Mathematical Association\nof America.\n\n\nIt has links and resources for readers, both students and\ninstructors. \u00a0I aim for it to\u00a0evolve and improve for the foreseeable future.\nSee content links to the left.\n\n\nYou can buy the ebook online.", 
            "title": "Introduction to the Mathematics of Computer Graphics"
        }, 
        {
            "location": "/#welcome", 
            "text": "This website is for the textbook  Introduction to the Mathematics of\nComputer Graphics ,\u00a0published by the Mathematical Association\nof America.  It has links and resources for readers, both students and\ninstructors. \u00a0I aim for it to\u00a0evolve and improve for the foreseeable future.\nSee content links to the left.  You can buy the ebook online.", 
            "title": "Welcome"
        }, 
        {
            "location": "/software-packages/", 
            "text": "POV-Ray\n\n\nThe Persistence of Vision Raytracer can be obtained from \nits website\n. \u00a0Or you can click \nthis direct link to the\u00a0installer\u00a0for Microsoft Windows\n, on the download page from that same site.\n\n\nInstructions for installing and using the software are provided in the textbook itself.\n\n\n\n\nNote\n\n\nThe textbook recommends that Mac users install the\u00a0Windows version in a\nvirtual machine, or using Wine. \u00a0But if you prefer a native user\ninterface, even if it doesn't match the texbook's content, see \nthe\nUnofficial POV-Ray GUI for\nMac\n.\nMac users may find it easier to get started with a copy of \nthe Basic\nScene 01\n from the Windows version of POV-Ray.\n\n\n\n\nVirtualDub for Windows\n\n\nThis software package creates videos from sequences of still frames created\nin POV-Ray. \u00a0You can visit \nits website\n, or go\ndirectly to \ndownloading a version for your Windows\ncomputer\n.\nInstructions for installing the software appear below; instructions for\nusing it are provided in the textbook itself.\n\n\n\n\nDownload the software using one of the links above.\n\n\nOpen the file you download, which is a \n.zip\n archive.\n\n\nIn the window that opens, click the button labeled \"Extract all\n     files,\" as shown in the screenshot below.\n\n\nChoose any folder on your hard drive where you wish to keep this\n     program. \u00a0One sensible place is to put it is in the same folder on\n     your hard drive where you keep all your POV files.\n\n\n\n\n\n\n\n\nTip\n\n\nYou do not need to download or install the software more than once;\nthis is a one-time-only procedure.\u00a0To run the program (now or at any\nfuture time) use Windows Explorer to navigate to the folder you chose\nand double-click the file \nVirtualDub.exe\n.\n\n\n\n\nTo make a shortcut for VirtualDub on your desktop, right-click the \n.exe\n\nfile and choose \"Copy,\" then right-click on your desktop and choose to paste\na shortcut.\n\n\nTime Lapse Assembler for Mac OS X\n\n\nDownload and install this application as follows.\n\n\n\n\nFirst download the application from\u00a0\nthe developer's\n     website\n.\n     It downloads as a disk image (\n.dmg\n) file, which your system probably\n     placed in your Downloads folder.\n\n\nFind that file and double-click it to mount and open it in Finder.\n    \u00a0This will show you the contents of the disk image, which is just the\n     app itself and a link to your Applications folder, as shown in the\n     screenshot below.\n\n\nClick and drag the application into your Applications folder. \u00a0This\n     installs the app on your system.\n\n\nYou can then close the disk image window, find the disk image on your\n     desktop, and drag it to the Trash to unmount it.\n\n\n\n\n\n\n\n\nTip\n\n\nYou need to follow this installation procedure only once. \u00a0Now that the\nsoftware is installed on your computer, to launch it, simply navigate to\nyour Applications folder (which appears in the Dock, for many users) and\ndouble-click Time Lapse Assembler.\n\n\n\n\nMac users will need to ensure that all frames of an animation are in JPEG\nformat. \u00a0To do so, see the Mac OS X Service I provide for that purpose,\nwhich you can \ndownload from the \"first animations\"\npage\n.\n\n\nffmpeg for Linux\n\n\nVisit \nthe ffmpeg website\n and follow the download\nand installation instructions for binaries for your type of Linux\ndistribution.", 
            "title": "Software Packages"
        }, 
        {
            "location": "/software-packages/#pov-ray", 
            "text": "The Persistence of Vision Raytracer can be obtained from  its website . \u00a0Or you can click  this direct link to the\u00a0installer\u00a0for Microsoft Windows , on the download page from that same site.  Instructions for installing and using the software are provided in the textbook itself.   Note  The textbook recommends that Mac users install the\u00a0Windows version in a\nvirtual machine, or using Wine. \u00a0But if you prefer a native user\ninterface, even if it doesn't match the texbook's content, see  the\nUnofficial POV-Ray GUI for\nMac .\nMac users may find it easier to get started with a copy of  the Basic\nScene 01  from the Windows version of POV-Ray.", 
            "title": "POV-Ray"
        }, 
        {
            "location": "/software-packages/#virtualdub-for-windows", 
            "text": "This software package creates videos from sequences of still frames created\nin POV-Ray. \u00a0You can visit  its website , or go\ndirectly to  downloading a version for your Windows\ncomputer .\nInstructions for installing the software appear below; instructions for\nusing it are provided in the textbook itself.   Download the software using one of the links above.  Open the file you download, which is a  .zip  archive.  In the window that opens, click the button labeled \"Extract all\n     files,\" as shown in the screenshot below.  Choose any folder on your hard drive where you wish to keep this\n     program. \u00a0One sensible place is to put it is in the same folder on\n     your hard drive where you keep all your POV files.     Tip  You do not need to download or install the software more than once;\nthis is a one-time-only procedure.\u00a0To run the program (now or at any\nfuture time) use Windows Explorer to navigate to the folder you chose\nand double-click the file  VirtualDub.exe .   To make a shortcut for VirtualDub on your desktop, right-click the  .exe \nfile and choose \"Copy,\" then right-click on your desktop and choose to paste\na shortcut.", 
            "title": "VirtualDub for Windows"
        }, 
        {
            "location": "/software-packages/#time-lapse-assembler-for-mac-os-x", 
            "text": "Download and install this application as follows.   First download the application from\u00a0 the developer's\n     website .\n     It downloads as a disk image ( .dmg ) file, which your system probably\n     placed in your Downloads folder.  Find that file and double-click it to mount and open it in Finder.\n    \u00a0This will show you the contents of the disk image, which is just the\n     app itself and a link to your Applications folder, as shown in the\n     screenshot below.  Click and drag the application into your Applications folder. \u00a0This\n     installs the app on your system.  You can then close the disk image window, find the disk image on your\n     desktop, and drag it to the Trash to unmount it.     Tip  You need to follow this installation procedure only once. \u00a0Now that the\nsoftware is installed on your computer, to launch it, simply navigate to\nyour Applications folder (which appears in the Dock, for many users) and\ndouble-click Time Lapse Assembler.   Mac users will need to ensure that all frames of an animation are in JPEG\nformat. \u00a0To do so, see the Mac OS X Service I provide for that purpose,\nwhich you can  download from the \"first animations\"\npage .", 
            "title": "Time Lapse Assembler for Mac OS X"
        }, 
        {
            "location": "/software-packages/#ffmpeg-for-linux", 
            "text": "Visit  the ffmpeg website  and follow the download\nand installation instructions for binaries for your type of Linux\ndistribution.", 
            "title": "ffmpeg for Linux"
        }, 
        {
            "location": "/chapter-1-resources/", 
            "text": "This page contains links to all resources mentioned in Chapter 1 of the\ntextbook. \u00a0There is currently only one.\n\n\nThe POV-Ray Hall of Fame\n\n\nThis site is mentioned at the end of the chapter when the photorealistic\nimage\u00a0\nGlasses\n\u00a0by Gilles Tran\nis held up as an example of realistic raytracing.", 
            "title": "Chapter 1. Introduction to Computer Graphics"
        }, 
        {
            "location": "/chapter-1-resources/#the-pov-ray-hall-of-fame", 
            "text": "This site is mentioned at the end of the chapter when the photorealistic\nimage\u00a0 Glasses \u00a0by Gilles Tran\nis held up as an example of realistic raytracing.", 
            "title": "The POV-Ray Hall of Fame"
        }, 
        {
            "location": "/chapter-2-resources/", 
            "text": "This page contains links to all resources mentioned in Chapter 2 of the\ntextbook.\n\n\nPractice Problems\n\n\n\n\nTip\n\n\nI highly recommend the practice problems on vectors contained at \nthe\nLearning Lesson website\n. Many of\nthem are\u00a0about three-dimensional vectors, and thus only apply after you\nhave read Chapter 4, but some of them are applicable now.\n\n\n\n\nInteractive Experiences\n\n\nCheck out the following GeoGebraTube interactive demos to experience\u00a0point\nand vector operations in 2D with your own mouse (or finger, on most tablet\ndevices).\n\n\n\n\nAddition of two vectors\n\n\nAddition of two vectors with components\n    shown\n\n\nAddition of a point and a\n    vector\n\u00a0(created by Kevin\n    Liu, a student at Bentley University, for this website)\n\n\nSubtraction of two vectors, or two\n    points\n (created by Kevin\n    Liu, a student at Bentley University, for this website)\n\n\nMultiplication of a scalar by a\n    vector\n\n\nUnit vectors\n\n\nConverting a vector into its magnitude and direction,\n    separately\n\u00a0(created by\n    Kevin Liu, a student at Bentley University, for this website)\n\n\nConverting\u00a0a separate magnitude and direction into a\n    vector\n\u00a0(created by Kevin\n    Liu, a student at Bentley University, for this website)", 
            "title": "Chapter 2. Two-dimensional Space"
        }, 
        {
            "location": "/chapter-2-resources/#practice-problems", 
            "text": "Tip  I highly recommend the practice problems on vectors contained at  the\nLearning Lesson website . Many of\nthem are\u00a0about three-dimensional vectors, and thus only apply after you\nhave read Chapter 4, but some of them are applicable now.", 
            "title": "Practice Problems"
        }, 
        {
            "location": "/chapter-2-resources/#interactive-experiences", 
            "text": "Check out the following GeoGebraTube interactive demos to experience\u00a0point\nand vector operations in 2D with your own mouse (or finger, on most tablet\ndevices).   Addition of two vectors  Addition of two vectors with components\n    shown  Addition of a point and a\n    vector \u00a0(created by Kevin\n    Liu, a student at Bentley University, for this website)  Subtraction of two vectors, or two\n    points  (created by Kevin\n    Liu, a student at Bentley University, for this website)  Multiplication of a scalar by a\n    vector  Unit vectors  Converting a vector into its magnitude and direction,\n    separately \u00a0(created by\n    Kevin Liu, a student at Bentley University, for this website)  Converting\u00a0a separate magnitude and direction into a\n    vector \u00a0(created by Kevin\n    Liu, a student at Bentley University, for this website)", 
            "title": "Interactive Experiences"
        }, 
        {
            "location": "/chapter-3-resources/", 
            "text": "This page contains links to all resources mentioned in Chapter 3 of the\ntextbook.\n\n\nBouncing ball movie\n\n\nShows the value of scalings for deforming an object. At the moment of the\nbounce, the ball is briefly deformed to be flatter and wider, as balls do\nwhen they bounce. This simple animation was created with POV-Ray, the\nraytracing engine used for projects in the textbook.\n\n\n\n\n\nAn interactive webpage on 2D Affine Transformations\n\n\nThis web page was created by the textbook author to correspond to several\nexercises in the chapter, most notably those involving scene construction\nand the runner, cap, and ball shapes.\n\n\n\n\nWarning\n\n\nIt has been tested on Google Chrome and Mozilla Firefox browsers, but\nnot others. In particular, no guarantee is made that it will function\non Microsoft Internet Explorer.\n\n\n\n\nGlyphic Technologies' Affine Transformations Applet\n\n\nA Java applet for experimenting with 2D affine transformations\n\n\n\n\nWarning\n\n\nIts rotations are clockwise, whereas I use the much more common\nconvention that rotations are counterclockwise.\nSo\u00a0\nR_{30^\\circ}\nR_{30^\\circ}\n\u00a0can be done in the applet by using \n-30^\\circ\n-30^\\circ\n\ninstead.\n\n\nIts\u00a0\ny\ny\n-axis is upside-down. This is common in computer applications,\nbut the textbook uses the mathematical convention you're probably\nfamiliar with from middle school. For us, the positive\u00a0\ny\ny\n\u00a0axis points\nup. So to see\u00a0\nT_{4,5}\nT_{4,5}\n\u00a0in the applet, you would have to\nuse\u00a0\nT_{4,-5}\nT_{4,-5}\n\u00a0instead.\n\n\nIts units are very small.\u00a0\nT_{4,5}\nT_{4,5}\n\u00a0will not move the object\nvery much at all. Something more like\u00a0\nT_{40,50}\nT_{40,50}\n\u00a0will be\nclearly visible.\n\n\n\n\nBrown University Exploratories' Transformation Game\n\n\nAnother Java applet that turns affine transformations into a puzzle game\n\n\nHow to play:\n\n\n\n\nTry to transform the house at the origin onto the darker copy.\n\n\nDrag a red transformation block from the right down to the backwards\n    pacman beneath the affine plane.\n\n\nAfter doing so, click and drag on the house to manipulate the parameter.\n\n\nE.g., place a translation, then drag to show how much to translate and\n    in what direction. Or place a rotation, then drag to show how much to\n    rotate.\n\n\nIn this game, translations are either in\u00a0\nx\nx\n\u00a0or in\u00a0\ny\ny\n\u00a0but not both.", 
            "title": "Chapter 3. Affine Transformations"
        }, 
        {
            "location": "/chapter-3-resources/#bouncing-ball-movie", 
            "text": "Shows the value of scalings for deforming an object. At the moment of the\nbounce, the ball is briefly deformed to be flatter and wider, as balls do\nwhen they bounce. This simple animation was created with POV-Ray, the\nraytracing engine used for projects in the textbook.", 
            "title": "Bouncing ball movie"
        }, 
        {
            "location": "/chapter-3-resources/#an-interactive-webpage-on-2d-affine-transformations", 
            "text": "This web page was created by the textbook author to correspond to several\nexercises in the chapter, most notably those involving scene construction\nand the runner, cap, and ball shapes.   Warning  It has been tested on Google Chrome and Mozilla Firefox browsers, but\nnot others. In particular, no guarantee is made that it will function\non Microsoft Internet Explorer.", 
            "title": "An interactive webpage on 2D Affine Transformations"
        }, 
        {
            "location": "/chapter-3-resources/#glyphic-technologies-affine-transformations-applet", 
            "text": "A Java applet for experimenting with 2D affine transformations   Warning  Its rotations are clockwise, whereas I use the much more common\nconvention that rotations are counterclockwise.\nSo\u00a0 R_{30^\\circ} R_{30^\\circ} \u00a0can be done in the applet by using  -30^\\circ -30^\\circ \ninstead.  Its\u00a0 y y -axis is upside-down. This is common in computer applications,\nbut the textbook uses the mathematical convention you're probably\nfamiliar with from middle school. For us, the positive\u00a0 y y \u00a0axis points\nup. So to see\u00a0 T_{4,5} T_{4,5} \u00a0in the applet, you would have to\nuse\u00a0 T_{4,-5} T_{4,-5} \u00a0instead.  Its units are very small.\u00a0 T_{4,5} T_{4,5} \u00a0will not move the object\nvery much at all. Something more like\u00a0 T_{40,50} T_{40,50} \u00a0will be\nclearly visible.", 
            "title": "Glyphic Technologies' Affine Transformations Applet"
        }, 
        {
            "location": "/chapter-3-resources/#brown-university-exploratories-transformation-game", 
            "text": "Another Java applet that turns affine transformations into a puzzle game  How to play:   Try to transform the house at the origin onto the darker copy.  Drag a red transformation block from the right down to the backwards\n    pacman beneath the affine plane.  After doing so, click and drag on the house to manipulate the parameter.  E.g., place a translation, then drag to show how much to translate and\n    in what direction. Or place a rotation, then drag to show how much to\n    rotate.  In this game, translations are either in\u00a0 x x \u00a0or in\u00a0 y y \u00a0but not both.", 
            "title": "Brown University Exploratories' Transformation Game"
        }, 
        {
            "location": "/chapter-4-resources/", 
            "text": "This page contains links to all resources mentioned in Chapter 4 of the\ntextbook.\n\n\nPractice Problems\n\n\n\n\nTip\n\n\nI highly recommend the practice problems on vectors contained at \nthe\nLearning Lesson website\n. I\nmentioned these same problems in Chapter 2, but only some were\napplicable then, because you had not yet learned about three\ndimensional space. Now, all such problems are good practice.\n\n\n\n\nPOV File of Three Keys Scene\n\n\nDownload the file \nthree-keys.pov\n here. \u00a0This will\nrender the scene shown in the text, and the source can be inspected to see\nhow it was created.\n\n\nFrank Hanish's 3D Transformations Applet\n\n\nA Java applet for experimenting with 3D affine transformations\n\n\n\n\nWarning\n\n\nFeel free to ignore the grid of numbers on the bottom of that page\nuntil you reach Chapter 5 in the textbook.\n\n\n\n\nI still should add here a tutorial on this applet. It is nontrivial, because\nit requires understanding a stack of matrices onto which you push values.\n\n\nPage of 3D Axes (PDF)\n\n\nFor doing the homework for this chapter, you will need to draw some objects\nin three-dimensional coordinate systems. Rather than make you draw them\nyourself, this page will save you time and help keep your work neat.\n\n\nAnimations of 3D Affine Transformations\n\n\nTranslation\u00a0of a wedge-shaped object by \n\\langle 3,2,-3\\rangle\n\\langle 3,2,-3\\rangle\n,\u00a0\nT_{3,2,-3}\nT_{3,2,-3}\n\n\n\n\nScaling\u00a0the same object by factors of \n, \n, and 3, in\u00a0\nx\nx\n,\u00a0\ny\ny\n, and\u00a0\nz\nz\n, respectively,\u00a0\nS_{1/2,1/2,3}\nS_{1/2,1/2,3}\n\n\n\n\nReflecting\u00a0the same object through the\u00a0\nyz\nyz\n\u00a0plane,\u00a0\nF\nF\n\n\n\n\nRotation\u00a0of the same object by \n-65^\\circ\n-65^\\circ\n around the\u00a0\nx\nx\n\u00a0axis,\u00a0\nR_{-65^\\circ,0,0}\nR_{-65^\\circ,0,0}\n\n\n\n\nRotation\u00a0of the same object by \n45^\\circ\n45^\\circ\n around the\u00a0\ny\ny\n\u00a0axis,\u00a0\nR_{0,45^\\circ,0}\nR_{0,45^\\circ,0}\n\n\n\n\nRotation\u00a0of the same object by \n60^\\circ\n60^\\circ\n around the\u00a0\nz\nz\n\u00a0axis,\u00a0\nR_{0,0,60^\\circ}\nR_{0,0,60^\\circ}\n\n\n\n\nCombination\u00a0of several transformations applied to the same object in sequence, \nT_{-2,0,0}R_{0,0,60^\\circ}S_{1/3,1/3,1/3}\nT_{-2,0,0}R_{0,0,60^\\circ}S_{1/3,1/3,1/3}", 
            "title": "Chapter 4. Three Dimensions"
        }, 
        {
            "location": "/chapter-4-resources/#practice-problems", 
            "text": "Tip  I highly recommend the practice problems on vectors contained at  the\nLearning Lesson website . I\nmentioned these same problems in Chapter 2, but only some were\napplicable then, because you had not yet learned about three\ndimensional space. Now, all such problems are good practice.", 
            "title": "Practice Problems"
        }, 
        {
            "location": "/chapter-4-resources/#pov-file-of-three-keys-scene", 
            "text": "Download the file  three-keys.pov  here. \u00a0This will\nrender the scene shown in the text, and the source can be inspected to see\nhow it was created.", 
            "title": "POV File of Three Keys Scene"
        }, 
        {
            "location": "/chapter-4-resources/#frank-hanishs-3d-transformations-applet", 
            "text": "A Java applet for experimenting with 3D affine transformations   Warning  Feel free to ignore the grid of numbers on the bottom of that page\nuntil you reach Chapter 5 in the textbook.   I still should add here a tutorial on this applet. It is nontrivial, because\nit requires understanding a stack of matrices onto which you push values.", 
            "title": "Frank Hanish's 3D Transformations Applet"
        }, 
        {
            "location": "/chapter-4-resources/#page-of-3d-axes-pdf", 
            "text": "For doing the homework for this chapter, you will need to draw some objects\nin three-dimensional coordinate systems. Rather than make you draw them\nyourself, this page will save you time and help keep your work neat.", 
            "title": "Page of 3D Axes (PDF)"
        }, 
        {
            "location": "/chapter-4-resources/#animations-of-3d-affine-transformations", 
            "text": "", 
            "title": "Animations of 3D Affine Transformations"
        }, 
        {
            "location": "/chapter-4-resources/#translation-of-a-wedge-shaped-object-by-langle-32-3ranglelangle-32-3rangle-t_32-3t_32-3", 
            "text": "", 
            "title": "Translation\u00a0of a wedge-shaped object by \\langle 3,2,-3\\rangle\\langle 3,2,-3\\rangle,\u00a0T_{3,2,-3}T_{3,2,-3}"
        }, 
        {
            "location": "/chapter-4-resources/#scaling-the-same-object-by-factors-of-12-12-and-3-in-xx-yy-and-zz-respectively-s_12123s_12123", 
            "text": "", 
            "title": "Scaling\u00a0the same object by factors of 1/2, 1/2, and 3, in\u00a0xx,\u00a0yy, and\u00a0zz, respectively,\u00a0S_{1/2,1/2,3}S_{1/2,1/2,3}"
        }, 
        {
            "location": "/chapter-4-resources/#reflecting-the-same-object-through-the-yzyz-plane-ff", 
            "text": "", 
            "title": "Reflecting\u00a0the same object through the\u00a0yzyz\u00a0plane,\u00a0FF"
        }, 
        {
            "location": "/chapter-4-resources/#rotation-of-the-same-object-by-65circ-65circ-around-the-xx-axis-r_-65circ00r_-65circ00", 
            "text": "", 
            "title": "Rotation\u00a0of the same object by -65^\\circ-65^\\circ around the\u00a0xx\u00a0axis,\u00a0R_{-65^\\circ,0,0}R_{-65^\\circ,0,0}"
        }, 
        {
            "location": "/chapter-4-resources/#rotation-of-the-same-object-by-45circ45circ-around-the-yy-axis-r_045circ0r_045circ0", 
            "text": "", 
            "title": "Rotation\u00a0of the same object by 45^\\circ45^\\circ around the\u00a0yy\u00a0axis,\u00a0R_{0,45^\\circ,0}R_{0,45^\\circ,0}"
        }, 
        {
            "location": "/chapter-4-resources/#rotation-of-the-same-object-by-60circ60circ-around-the-zz-axis-r_0060circr_0060circ", 
            "text": "", 
            "title": "Rotation\u00a0of the same object by 60^\\circ60^\\circ around the\u00a0zz\u00a0axis,\u00a0R_{0,0,60^\\circ}R_{0,0,60^\\circ}"
        }, 
        {
            "location": "/chapter-4-resources/#combination-of-several-transformations-applied-to-the-same-object-in-sequence-t_-200r_0060circs_131313t_-200r_0060circs_131313", 
            "text": "", 
            "title": "Combination\u00a0of several transformations applied to the same object in sequence, T_{-2,0,0}R_{0,0,60^\\circ}S_{1/3,1/3,1/3}T_{-2,0,0}R_{0,0,60^\\circ}S_{1/3,1/3,1/3}"
        }, 
        {
            "location": "/chapter-5-resources/", 
            "text": "This page contains links to all resources mentioned in Chapter 5 of the\ntextbook.\n\n\nMatrix Multiplication Visualized\n\n\nKevin Cox of Bentley University created \nthis interactive\nvisualization\n of \n4\\times4\n4\\times4\n\nmatrix multiplication that goes hand-in-hand with the static diagrams in the\ntextbook.", 
            "title": "Chapter 5. Matrices"
        }, 
        {
            "location": "/chapter-5-resources/#matrix-multiplication-visualized", 
            "text": "Kevin Cox of Bentley University created  this interactive\nvisualization  of  4\\times4 4\\times4 \nmatrix multiplication that goes hand-in-hand with the static diagrams in the\ntextbook.", 
            "title": "Matrix Multiplication Visualized"
        }, 
        {
            "location": "/chapter-6-resources/", 
            "text": "This page contains links to all resources mentioned in Chapter 6 of the\ntextbook. \u00a0See\u00a0\nthe POV Break B page\n to download a\ncopy of the right-handed basic scene template.\n\n\nInteractive Visualizations\n\n\nAll created by Bentley University honors student Kevin Cox:\n\n\n\n\nThe dot product of two vectors in two-dimensional\n   space\n\n\nThe equation of a plane in three-dimensional\n   space\n\n\nThe intersection of a line of sight with a plane in three-dimensional\n   space\n\n\n\n\nPractice Problems\n\n\nI highly recommend the practice problems on dot products\u00a0contained at \nthe\nLearning Lesson website\n.\n\n\nA simple ray-tracer built in JavaScript\n\n\nThis is useful for seeing how the concepts of this chapter (and all chapters\nin this part of the text) play out. \u00a0Especially if you plan to follow the\nprogramming exercises in this portion of the text, which lead you through\nbuilding a simple raytracer yourself, you may want to experiment with this\none to see what kind of result you can expect to achieve at the end of the\nexercises in question.", 
            "title": "Chapter 6. Lines of Sight"
        }, 
        {
            "location": "/chapter-6-resources/#interactive-visualizations", 
            "text": "All created by Bentley University honors student Kevin Cox:   The dot product of two vectors in two-dimensional\n   space  The equation of a plane in three-dimensional\n   space  The intersection of a line of sight with a plane in three-dimensional\n   space", 
            "title": "Interactive Visualizations"
        }, 
        {
            "location": "/chapter-6-resources/#practice-problems", 
            "text": "I highly recommend the practice problems on dot products\u00a0contained at  the\nLearning Lesson website .", 
            "title": "Practice Problems"
        }, 
        {
            "location": "/chapter-6-resources/#a-simple-ray-tracer-built-in-javascript", 
            "text": "This is useful for seeing how the concepts of this chapter (and all chapters\nin this part of the text) play out. \u00a0Especially if you plan to follow the\nprogramming exercises in this portion of the text, which lead you through\nbuilding a simple raytracer yourself, you may want to experiment with this\none to see what kind of result you can expect to achieve at the end of the\nexercises in question.", 
            "title": "A simple ray-tracer built in JavaScript"
        }, 
        {
            "location": "/chapter-7-resources/", 
            "text": "This page contains links to all resources mentioned in Chapter 7 of the\ntextbook. \u00a0In addition to the resources posted here,\u00a0\nsome resources from\nChapter 6 remain relevant\n, especially the link to\nthe JavaScript raytracer for the programming exercises.\n\n\nInteractive Visualization\n\n\nCreated by Bentley University honors student Kevin Cox:\n\n\n\n\nThe intersection of a line of sight with a sphere\u00a0in three-dimensional\n   space", 
            "title": "Chapter 7. Lines Intersecting Objects"
        }, 
        {
            "location": "/chapter-7-resources/#interactive-visualization", 
            "text": "Created by Bentley University honors student Kevin Cox:   The intersection of a line of sight with a sphere\u00a0in three-dimensional\n   space", 
            "title": "Interactive Visualization"
        }, 
        {
            "location": "/chapter-8-resources/", 
            "text": "This page contains links to all resources mentioned in Chapter 8 of the\ntextbook.\n\n\nAnimated video of the first two figures from the chapter\n\n\nThese videos were created in POV-Ray, and show that POV accurately combines\nlights and filters lights according to the additive and subtractive color\nmodels.\n\n\n\n\n\nInteractive color picker\n\n\nThis lets you experiment with how changing any one of the components of an\nRGB or HSB color vector impacts all the components in the other color space.\n\n\nAlso, \nsome links from Chapter 6 remain relevant\n,\nespecially the link to the JavaScript raytracer for the programming\nexercises.", 
            "title": "Chapter 8. Three Color Models"
        }, 
        {
            "location": "/chapter-8-resources/#animated-video-of-the-first-two-figures-from-the-chapter", 
            "text": "These videos were created in POV-Ray, and show that POV accurately combines\nlights and filters lights according to the additive and subtractive color\nmodels.", 
            "title": "Animated video of the first two figures from the chapter"
        }, 
        {
            "location": "/chapter-8-resources/#interactive-color-picker", 
            "text": "This lets you experiment with how changing any one of the components of an\nRGB or HSB color vector impacts all the components in the other color space.  Also,  some links from Chapter 6 remain relevant ,\nespecially the link to the JavaScript raytracer for the programming\nexercises.", 
            "title": "Interactive color picker"
        }, 
        {
            "location": "/chapter-9-resources/", 
            "text": "This page contains links to all resources mentioned in Chapter 9 of the\ntextbook.\n\n\nSpreadsheet Exercise\n\n\nDownload here a copy of the spreadsheet mentioned in the exercises for this\nchapter. \u00a0The download contains only the structure, with no formulas; the\nexercise asks you to fill in the formulas.\n\n\nChoose a format:\n\n\n\n\nThe old Excel format (.xls)\n\n\nThe new Excel format (.xlsx)\n.\n\n\n\n\nOther spreadsheet software (such as \nOpenOffice.org's\nCalc\n or \nApple's\nNumbers.app\n) should open at least one\nof those two formats.\n\n\nAlso,\u00a0\nsome resources from Chapter 6 remain\nrelevant\n, especially the link to the JavaScript\nraytracer for the programming exercises.", 
            "title": "Chapter 9. Lighting"
        }, 
        {
            "location": "/chapter-9-resources/#spreadsheet-exercise", 
            "text": "Download here a copy of the spreadsheet mentioned in the exercises for this\nchapter. \u00a0The download contains only the structure, with no formulas; the\nexercise asks you to fill in the formulas.  Choose a format:   The old Excel format (.xls)  The new Excel format (.xlsx) .   Other spreadsheet software (such as  OpenOffice.org's\nCalc  or  Apple's\nNumbers.app ) should open at least one\nof those two formats.  Also,\u00a0 some resources from Chapter 6 remain\nrelevant , especially the link to the JavaScript\nraytracer for the programming exercises.", 
            "title": "Spreadsheet Exercise"
        }, 
        {
            "location": "/chapter-10-resources/", 
            "text": "This page contains links to all resources mentioned in Chapter 10 of the\ntextbook. It begins with several ways to graph vector functions for free on\nthe web, and concludes with how to graph them within POV-Ray scenes. \u00a0As a\nquick comparison, the first two methods require Java, while the third does\nnot; but consequently the first two are interactive, while the third\nproduces only a static image.\n\n\nCalcPlot3D\n\n\nA useful tool for graphing vector functions and other kinds of 3D objects.\nAlthough this applet was created for use in calculus classes, it is useful\nto us as well. \u00a0Use the following procedure to graph a vector function in\nCalcPlot3D.\n\n\n\n\nErase the default shape that appears, by unchecking the box next to\n     Function 1 and clicking the Graph button immediately above it.\n\n\nAdd a parametric curve by clicking the Graph menu and choosing Add a\n     Space Curve.\n\n\nIn the three blanks provided, enter the\u00a0\nx\nx\n,\u00a0\ny\ny\n, and\u00a0\nz\nz\n\u00a0components\n     of the vector function, using\u00a0\nt\nt\n\u00a0as the parameter. The default bounds\n     for\u00a0\nt\nt\n\u00a0(from \n-10\n-10\n to \n10\n10\n) may be sensible for your function, but you\n     can change them.\n\n\nClick Graph (on the popup window into which you typed the parametric\n     equations).\n\n\nClick and drag to view from different angles.\n\n\n\n\nSage\n\n\nA powerful mathematics tool that you can use on your own computer or on the\nweb. \u00a0\nHere is a link to a webpage that evaluates Sage\ncode\n and shows you the result immediately. \u00a0Type\nin code like the following to graph a vector function. \u00a0(Replace the three\ncomponents of the vector function with any three vector function\ncomponents.) \u00a0The \n0\n0\n and \n2\\pi\n2\\pi\n are the bounds on\u00a0\nt\nt\n.\n\n\nvar\n(\nt\n)\n\n\nparametric_plot3d\n([\ncos\n(\nt\n),\nsin\n(\nt\n),\nt\n],(\n0\n,\n2\n*\npi\n))\n\n\n\n\n\nTo see that example plotted, \nclick here\n.\n\n\nWolfram|Alpha\n\n\nLike Sage, this online math tool does far more than just graphing vector\nfunctions, but we can use it for that, too. \u00a0In the input box, type input\nlike the following.\n\n\nparametric plot (t*cos t, t*sin t,t), t=0..6pi\n\n\n\n\nTo see that example plotted,\u00a0\nclick\nhere\n.\n\n\nGraphing vector functions in POV\n\n\nDownload this file by clicking\n\nvector-functions.inc\n. Instructions for using\nit appear in the textbook, and you can download\n\nvector-demo.pov\n to see how I have used it in a\ndemo.\n\n\nReview of Derivatives\n\n\nIf it's been awhile since you've had differential calculus (what many\ncolleges call \"Calculus I\") then here are some online review resources\navailable to you. \u00a0There are a great many, and this is just a selection.\n\n\n\n\nReference sheets\n\n\nDerivative rules\n    only\n\u00a0(top half of the\n    page)\n\n\nDerivative rules and related\n    strategies\n\n    (only portions of the first page or two are relevant for our study)\n\n\n\n\n\n\nSelected video lectures from Khan Academy\n\n\nThe power\n    rule\n\n\nTrigonometry, exponentials, and\n    logarithms\n\n\nThe product\n    rule\n\n\nThe quotient\n    rule\n\n\nThe chain\n    rule", 
            "title": "Chapter 10. Vector Functions"
        }, 
        {
            "location": "/chapter-10-resources/#calcplot3d", 
            "text": "A useful tool for graphing vector functions and other kinds of 3D objects.\nAlthough this applet was created for use in calculus classes, it is useful\nto us as well. \u00a0Use the following procedure to graph a vector function in\nCalcPlot3D.   Erase the default shape that appears, by unchecking the box next to\n     Function 1 and clicking the Graph button immediately above it.  Add a parametric curve by clicking the Graph menu and choosing Add a\n     Space Curve.  In the three blanks provided, enter the\u00a0 x x ,\u00a0 y y , and\u00a0 z z \u00a0components\n     of the vector function, using\u00a0 t t \u00a0as the parameter. The default bounds\n     for\u00a0 t t \u00a0(from  -10 -10  to  10 10 ) may be sensible for your function, but you\n     can change them.  Click Graph (on the popup window into which you typed the parametric\n     equations).  Click and drag to view from different angles.", 
            "title": "CalcPlot3D"
        }, 
        {
            "location": "/chapter-10-resources/#sage", 
            "text": "A powerful mathematics tool that you can use on your own computer or on the\nweb. \u00a0 Here is a link to a webpage that evaluates Sage\ncode  and shows you the result immediately. \u00a0Type\nin code like the following to graph a vector function. \u00a0(Replace the three\ncomponents of the vector function with any three vector function\ncomponents.) \u00a0The  0 0  and  2\\pi 2\\pi  are the bounds on\u00a0 t t .  var ( t )  parametric_plot3d ([ cos ( t ), sin ( t ), t ],( 0 , 2 * pi ))   To see that example plotted,  click here .", 
            "title": "Sage"
        }, 
        {
            "location": "/chapter-10-resources/#wolframalpha", 
            "text": "Like Sage, this online math tool does far more than just graphing vector\nfunctions, but we can use it for that, too. \u00a0In the input box, type input\nlike the following.  parametric plot (t*cos t, t*sin t,t), t=0..6pi  To see that example plotted,\u00a0 click\nhere .", 
            "title": "Wolfram|Alpha"
        }, 
        {
            "location": "/chapter-10-resources/#graphing-vector-functions-in-pov", 
            "text": "Download this file by clicking vector-functions.inc . Instructions for using\nit appear in the textbook, and you can download vector-demo.pov  to see how I have used it in a\ndemo.", 
            "title": "Graphing vector functions in POV"
        }, 
        {
            "location": "/chapter-10-resources/#review-of-derivatives", 
            "text": "If it's been awhile since you've had differential calculus (what many\ncolleges call \"Calculus I\") then here are some online review resources\navailable to you. \u00a0There are a great many, and this is just a selection.   Reference sheets  Derivative rules\n    only \u00a0(top half of the\n    page)  Derivative rules and related\n    strategies \n    (only portions of the first page or two are relevant for our study)    Selected video lectures from Khan Academy  The power\n    rule  Trigonometry, exponentials, and\n    logarithms  The product\n    rule  The quotient\n    rule  The chain\n    rule", 
            "title": "Review of Derivatives"
        }, 
        {
            "location": "/chapter-11-resources/", 
            "text": "This page contains links to all resources mentioned in Chapter 11 of the\ntextbook.\n\n\nB\u00e9zier curve simplifier\n\n\nUse this online\ntool\n\nto enter your control points and have it create a simple vector function\nformula for a cubic B\u00e9zier curve. \u00a0(The top of that page shows the code that\nthe page is using to do the work; scroll down to where it asks you for your\ninput.)\n\n\nInteractive cubic B\u00e9zier curves\n\n\nTry\u00a0\nthis interactive\nwebsite\n\nfor cubic B\u00e9zier curves in two dimensions. It allows you to move\u00a0anywhere in\non\u00a0the page the\u00a0four control points, and it shows\u00a0the corresponding function\n\nP(t)\nP(t)\n built using the formula given in this chapter of the textbook. You\ncan\u00a0see how the control points determine the curve as you drag them around.\n\n\nCar-and-track scene\n\n\nYou can \ndownload the .pov scene file containing the car and\ntrack\n, for use in exercises that ask you to modify it.\n\n\nExplosion Example\n\n\nThis shows what it could look like to apply to the sphere in the POV basic\nscene the explosion macro you are asked to build in one of this chapter's\nadvanced programming exercises.", 
            "title": "Chapter 11. B\u00e9zeir Curves"
        }, 
        {
            "location": "/chapter-11-resources/#bezier-curve-simplifier", 
            "text": "Use this online\ntool \nto enter your control points and have it create a simple vector function\nformula for a cubic B\u00e9zier curve. \u00a0(The top of that page shows the code that\nthe page is using to do the work; scroll down to where it asks you for your\ninput.)", 
            "title": "B\u00e9zier curve simplifier"
        }, 
        {
            "location": "/chapter-11-resources/#interactive-cubic-bezier-curves", 
            "text": "Try\u00a0 this interactive\nwebsite \nfor cubic B\u00e9zier curves in two dimensions. It allows you to move\u00a0anywhere in\non\u00a0the page the\u00a0four control points, and it shows\u00a0the corresponding function P(t) P(t)  built using the formula given in this chapter of the textbook. You\ncan\u00a0see how the control points determine the curve as you drag them around.", 
            "title": "Interactive cubic B\u00e9zier curves"
        }, 
        {
            "location": "/chapter-11-resources/#car-and-track-scene", 
            "text": "You can  download the .pov scene file containing the car and\ntrack , for use in exercises that ask you to modify it.", 
            "title": "Car-and-track scene"
        }, 
        {
            "location": "/chapter-11-resources/#explosion-example", 
            "text": "This shows what it could look like to apply to the sphere in the POV basic\nscene the explosion macro you are asked to build in one of this chapter's\nadvanced programming exercises.", 
            "title": "Explosion Example"
        }, 
        {
            "location": "/chapter-12-resources/", 
            "text": "This page contains links to all resources mentioned in Chapter 12\u00a0of the\ntextbook.\u00a0 In addition to the resources listed below,\u00a0\nsome resources from\nChapter 11 remain relevant\n.\n\n\nInteractive quadratic B\u00e9zier curve page\n\n\nOn \nthe Chapter 11 page\n, I\u00a0included a link to a\npage where you could\u00a0\nplay with cubic B\u00e9zier\ncurves\n.\nNow that Chapter 12 has introduced the whole family of B\u00e9zier curves of\ndifferent degrees, you may also be interested in \nthe corresponding\nquadratic\npage\n.\n\n\nThe de Casteljau Algorithm Applet\n\n\nThe de Casteljau algorithm is the iterative construction of higher-degree\nB\u00e9zier curves from compositions of linear interpolations. \u00a0\nAn interactive\nanimation of that algorithm is available\nhere.\n\n\nAnimated figures from the text", 
            "title": "Chapter 12. Bernstein Polynomials"
        }, 
        {
            "location": "/chapter-12-resources/#interactive-quadratic-bezier-curve-page", 
            "text": "On  the Chapter 11 page , I\u00a0included a link to a\npage where you could\u00a0 play with cubic B\u00e9zier\ncurves .\nNow that Chapter 12 has introduced the whole family of B\u00e9zier curves of\ndifferent degrees, you may also be interested in  the corresponding\nquadratic\npage .", 
            "title": "Interactive quadratic B\u00e9zier curve page"
        }, 
        {
            "location": "/chapter-12-resources/#the-de-casteljau-algorithm-applet", 
            "text": "The de Casteljau algorithm is the iterative construction of higher-degree\nB\u00e9zier curves from compositions of linear interpolations. \u00a0 An interactive\nanimation of that algorithm is available\nhere.", 
            "title": "The de Casteljau Algorithm Applet"
        }, 
        {
            "location": "/chapter-12-resources/#animated-figures-from-the-text", 
            "text": "", 
            "title": "Animated figures from the text"
        }, 
        {
            "location": "/chapter-13-resources/", 
            "text": "This page contains links to all resources mentioned in Chapter 13 of the\ntextbook.\n\n\nHigh-speed videos of collisions\n\n\nTo see ultra-slow-motion videos of objects colliding, consider the links\nbelow. \u00a0These demonstrate that, although changes in velocity may seem\ninstantaneous when we watch them at normal speed with the naked eye, they\nare nonetheless continuous changes in velocity when they are slowed down.\n\n\n\n\n\n\nA baseball hitting a bat at 140\n    mph\n\n\n(YouTube video from Washington State University's Sports Science Lab)\n\n\n\n\n\n\nWhat happens when ball meets\n    bat?\n\n\n(web page with videos, by Daniel Russell, professor at Pennsylvania\nState University)\n\n\n\n\n\n\nAnimated video explaining the three levels of continuity\n\n\nIllustrates the three levels of continuity discussed in the chapter, with a\ncar moving along various paths of motion to illustrate what each type of\ncontinuity feels like to watch in a movie.\n\n\n\n\n\nThe car object in that video\n\n\nIf you plan to do the exercise in the text that asks you to create a video\nlike the one above, you may be interested in having the automobile model on\nwhich it was based. \u00a0It was created by Friedrich Lohm\u00fceller, and is\navailable on \nthis\npage\n.", 
            "title": "Chapter 13. Continuity and B\u00e9zier Curves"
        }, 
        {
            "location": "/chapter-13-resources/#high-speed-videos-of-collisions", 
            "text": "To see ultra-slow-motion videos of objects colliding, consider the links\nbelow. \u00a0These demonstrate that, although changes in velocity may seem\ninstantaneous when we watch them at normal speed with the naked eye, they\nare nonetheless continuous changes in velocity when they are slowed down.    A baseball hitting a bat at 140\n    mph  (YouTube video from Washington State University's Sports Science Lab)    What happens when ball meets\n    bat?  (web page with videos, by Daniel Russell, professor at Pennsylvania\nState University)", 
            "title": "High-speed videos of collisions"
        }, 
        {
            "location": "/chapter-13-resources/#animated-video-explaining-the-three-levels-of-continuity", 
            "text": "Illustrates the three levels of continuity discussed in the chapter, with a\ncar moving along various paths of motion to illustrate what each type of\ncontinuity feels like to watch in a movie.", 
            "title": "Animated video explaining the three levels of continuity"
        }, 
        {
            "location": "/chapter-13-resources/#the-car-object-in-that-video", 
            "text": "If you plan to do the exercise in the text that asks you to create a video\nlike the one above, you may be interested in having the automobile model on\nwhich it was based. \u00a0It was created by Friedrich Lohm\u00fceller, and is\navailable on  this\npage .", 
            "title": "The car object in that video"
        }, 
        {
            "location": "/chapter-14-resources/", 
            "text": "This page contains links to all resources mentioned in Chapter 14 of the\ntextbook.\n\n\nWaving Flag\n\n\nA simulation of a waving flag using a cubic B\u00e9zier surface whose control net\npoints are animated.\n\n\n\n\n\nWobbling liquid\n\n\nA simulation of liquid in a rectangular container using an 8\nth\n-degree (in\nboth directions) B\u00e9zier surface whose control net points are animated.", 
            "title": "Chapter 14. B\u00e9zier Surfaces"
        }, 
        {
            "location": "/chapter-14-resources/#waving-flag", 
            "text": "A simulation of a waving flag using a cubic B\u00e9zier surface whose control net\npoints are animated.", 
            "title": "Waving Flag"
        }, 
        {
            "location": "/chapter-14-resources/#wobbling-liquid", 
            "text": "A simulation of liquid in a rectangular container using an 8 th -degree (in\nboth directions) B\u00e9zier surface whose control net points are animated.", 
            "title": "Wobbling liquid"
        }, 
        {
            "location": "/chapter-15-resources/", 
            "text": "This page contains links to all resources mentioned in Chapter 15 of the\ntextbook.\n\n\nOcean animations in Blender\n\n\nThe ocean simulation covered\u00a0in this video is a large, complex mesh with\nsubdivision applied.", 
            "title": "Chapter 15. Subdivision Surfaces"
        }, 
        {
            "location": "/chapter-15-resources/#ocean-animations-in-blender", 
            "text": "The ocean simulation covered\u00a0in this video is a large, complex mesh with\nsubdivision applied.", 
            "title": "Ocean animations in Blender"
        }, 
        {
            "location": "/pov-break-a-resources/", 
            "text": "This page contains links to all resources mentioned in POV Break A of the\ntextbook.\n\n\nDownload POV-Ray\n\n\nSee\u00a0\nSoftware Packages\n\u00a0to download the POV-Ray\nsoftware.\n\n\nProject Information for Instructors\n\n\nI do not assign the introductory project in this POV Break to my own\nstudents, so there is no suggested grading criteria for it. \u00a0All future POV\nBreaks' projects come with suggested grading criteria.", 
            "title": "POV Break A. Introduction to POV-Ray"
        }, 
        {
            "location": "/pov-break-a-resources/#download-pov-ray", 
            "text": "See\u00a0 Software Packages \u00a0to download the POV-Ray\nsoftware.", 
            "title": "Download POV-Ray"
        }, 
        {
            "location": "/pov-break-a-resources/#project-information-for-instructors", 
            "text": "I do not assign the introductory project in this POV Break to my own\nstudents, so there is no suggested grading criteria for it. \u00a0All future POV\nBreaks' projects come with suggested grading criteria.", 
            "title": "Project Information for Instructors"
        }, 
        {
            "location": "/pov-break-b-resources/", 
            "text": "This page contains links to all resources mentioned in POV Break B of the\ntextbook.\n\n\nRight-handed Basic Scene\n\n\nDownload here\n the\u00a0\n.pov\n\u00a0file of the\nbasic scene converted to a right-handed coordinate system.\n\n\nDownload basic-shapes.inc and my scene file\n\n\nDownload the \nbasic-shapes.inc\n file to use in your\nproject. It provides the 15 shapes you'll arrange as part of this project.\n\n\nDownload\u00a0\nthe scene file for my example\n of\nmy own initials.\n\n\nFree graph paper online\n\n\n\n\nTip\n\n\nI recommend using graph paper to plan your projects before you begin\nthem.  \nYou can get free graph paper online\nhere\n, among other places.\n\n\n\n\nProject Information for Instructors\n\n\nWhen my students do this project, I create a wiki page\u00a0in our course\nmanagement system (Blackboard) that contains instructions for how they can\npost their work to that wiki. \u00a0All student posts go on one wiki page, and\ninclude both a rendered image and a download link to their original scene\n(\n.pov\n) file. \u00a0Since this is the first project I assign, I use some\nin-class time to verify that everyone knows how to use the Blackboard wiki,\nand we look at one another's work if anyone is able to post right there in\nclass.\n\n\nI require my students to name their\u00a0\n.POV\n\u00a0files\u00a0(and the corresponding\n\n.PNG\n\u00a0files) according to the filename convention\n\nProject-B-Your-Name-Here.POV\n\u00a0(or\u00a0\n.PNG\n). \u00a0For example, if I were doing\nthe project, I would submit the files\u00a0\nProject-B-Nathan-Carter.POV\n\u00a0and\n\nProject-B-Nathan-Carter.PNG\n. \u00a0Having a convention like this helps a lot\nwhen downloading 30 files of each type for grading.\n\n\nI use the following grading criteria.\u00a0\u00a0The portion for submission is as high as it is because this is their first time submitting a project, so I give credit for the fact that they must invest time in learning the wiki and submission process, which they will then use throughout the rest of the course without any additional credit for it.\n\n\n\n  \n\n    \n\n      Completing and submitting a scene file that renders in POV (i.e., no errors if I run your file)\n    \n\n\n    \n\n      30%\n    \n\n  \n\n\n  \n\n    \n\n      Submitting the corresponding image file\n    \n\n\n    \n\n      10%\n    \n\n  \n\n\n  \n\n    \n\n      Correctly following directions for submission\n    \n\n\n    \n\n      20%\n    \n\n  \n\n\n  \n\n    \n\n      Meeting the 3 criteria listed in the text\n    \n\n\n    \n\n      30% (10% each)\n    \n\n  \n\n\n  \n\n    \n\n      Creativity and/or artistry\n    \n\n\n    \n\n      10%\n    \n\n  \n\n\n\n\n\nI include a creativity and/or artistry component to each project's grade, to\nencourage my students to enjoy the work, and to treat it as something more\nexpressive than typical math homework, a chance to have fun while gaining\nmastery of the material. The creativity and/or artistry component may not\nalways be 10%, but it is for this first project. Doing only the minimum\nrequired earns a 0% for that portion, while 10% for that portion means\nimpressing me with going far above and beyond the minimum. And of course\nstudents can earn 1%-9% as well.", 
            "title": "POV Break B. Arranging a Scene"
        }, 
        {
            "location": "/pov-break-b-resources/#right-handed-basic-scene", 
            "text": "Download here  the\u00a0 .pov \u00a0file of the\nbasic scene converted to a right-handed coordinate system.", 
            "title": "Right-handed Basic Scene"
        }, 
        {
            "location": "/pov-break-b-resources/#download-basic-shapesinc-and-my-scene-file", 
            "text": "Download the  basic-shapes.inc  file to use in your\nproject. It provides the 15 shapes you'll arrange as part of this project.  Download\u00a0 the scene file for my example  of\nmy own initials.", 
            "title": "Download basic-shapes.inc and my scene file"
        }, 
        {
            "location": "/pov-break-b-resources/#free-graph-paper-online", 
            "text": "Tip  I recommend using graph paper to plan your projects before you begin\nthem.   You can get free graph paper online\nhere , among other places.", 
            "title": "Free graph paper online"
        }, 
        {
            "location": "/pov-break-b-resources/#project-information-for-instructors", 
            "text": "When my students do this project, I create a wiki page\u00a0in our course\nmanagement system (Blackboard) that contains instructions for how they can\npost their work to that wiki. \u00a0All student posts go on one wiki page, and\ninclude both a rendered image and a download link to their original scene\n( .pov ) file. \u00a0Since this is the first project I assign, I use some\nin-class time to verify that everyone knows how to use the Blackboard wiki,\nand we look at one another's work if anyone is able to post right there in\nclass.  I require my students to name their\u00a0 .POV \u00a0files\u00a0(and the corresponding .PNG \u00a0files) according to the filename convention Project-B-Your-Name-Here.POV \u00a0(or\u00a0 .PNG ). \u00a0For example, if I were doing\nthe project, I would submit the files\u00a0 Project-B-Nathan-Carter.POV \u00a0and Project-B-Nathan-Carter.PNG . \u00a0Having a convention like this helps a lot\nwhen downloading 30 files of each type for grading.  I use the following grading criteria.\u00a0\u00a0The portion for submission is as high as it is because this is their first time submitting a project, so I give credit for the fact that they must invest time in learning the wiki and submission process, which they will then use throughout the rest of the course without any additional credit for it.  \n   \n     \n      Completing and submitting a scene file that renders in POV (i.e., no errors if I run your file)\n     \n\n     \n      30%\n     \n   \n\n   \n     \n      Submitting the corresponding image file\n     \n\n     \n      10%\n     \n   \n\n   \n     \n      Correctly following directions for submission\n     \n\n     \n      20%\n     \n   \n\n   \n     \n      Meeting the 3 criteria listed in the text\n     \n\n     \n      30% (10% each)\n     \n   \n\n   \n     \n      Creativity and/or artistry\n     \n\n     \n      10%\n     \n     I include a creativity and/or artistry component to each project's grade, to\nencourage my students to enjoy the work, and to treat it as something more\nexpressive than typical math homework, a chance to have fun while gaining\nmastery of the material. The creativity and/or artistry component may not\nalways be 10%, but it is for this first project. Doing only the minimum\nrequired earns a 0% for that portion, while 10% for that portion means\nimpressing me with going far above and beyond the minimum. And of course\nstudents can earn 1%-9% as well.", 
            "title": "Project Information for Instructors"
        }, 
        {
            "location": "/pov-break-c-resources/", 
            "text": "This page contains links to all resources mentioned in POV Break C of the\ntextbook.\n\n\nProject Information for Instructors\n\n\nWhen my students do this project, I create a wiki page\u00a0in our course\nmanagement system (Blackboard) that contains instructions for how they can\npost their work to that wiki. \u00a0I create one central page with the list of\ntopics, and students claim a topic by editing that page and placing their\nname next to their chosen topic (first come, first served). \u00a0They make the\ntopic name a link to a new wiki page, and place all their writing there.\n\n\nI provide two example tutorials already written,\u00a0as examples of the kind of\nwork I expect. \u00a0I usually create two such exmaples:\n\n\n\n\na reference image showcasing all of the\u00a0\nwood.inc\n\u00a0and\u00a0\nstones.inc\n\n     textures, with instructions on how to import those include files and\n     use them in your scene file\n\n\na tutorial on how to simulate focal blur in POV, with example images\n\n\n\n\nI do not include those tutorials on this website, so that others who wish to\nassign those particular projects in other classes may do so.\n\n\nI also encourage my students to improve upon their first draft,\u00a0by grading\nthat draft and offering them two options. \u00a0They can keep that grade and be\ndone, which students who do a great job on the first draft often do. \u00a0But as\nmost of us know, writing is hard, and many people do not get the grade they\nwant on their first draft. \u00a0My grading of it provides specific suggestions\nfor improvement, and those who choose to follow them can resubmit once, and\nI will update the grade according to how much of the suggestions they have\nimplemented.\n\n\nI tell my students to write to a target audience of their classmates.\u00a0Assume\nthat a classmate may read your wiki page while working on a future project\nfor our course, hoping to put to immediate use what you've written. Assume\nthe reader has no POV knowledge beyond what you have, just what we've\nlearned in our course so far. Read your work critically and ask yourself,\n\"If I read someone else's post and it looked like this, would I understand\nit? Would I be able to use it in a project? Is there anything missing,\nconfusing, or inaccurate?\"\n\n\nI use the following grading criteria.\n\n\n\n  \n\n    \n\n      Claiming a topic, creating a wiki page for it, and inserting any kind of content\n    \n\n\n    \n\n      25%\n    \n\n  \n\n\n  \n\n    \n\n      Satisfying the requirement of including example work, images, and references\n    \n\n\n    \n\n      25%\n    \n\n  \n\n\n  \n\n    \n\n      Correctly following directions for submission\n    \n\n\n    \n\n      10%\n    \n\n  \n\n\n  \n\n    \n\n      Writing clearly for your target audience\n (If this is difficult for you, pair up with a friend and read and criticize each other's work.\n And remember, friends don't let friends submit confusing wiki pages.)\n    \n\n\n    \n\n      20%\n    \n\n  \n\n\n  \n\n    \n\n      Ensuring your work makes it easy for someone to use the topic you chose\n    \n\n\n    \n\n      15%\n    \n\n  \n\n\n  \n\n    \n\n      Creativity and/or artistry, or simply going beyond the call of duty\n    \n\n\n    \n\n      5%\n    \n\n  \n\n\n\n\n\nAgain it is very easy to earn 60% by simply submitting information in the\ncorrect form, even if it is completely wrong and useless. That's generous of\nme, but of course 60% is not actually a passing grade.\n\n\n\n\nWarning\n\n\nThe writing clearly portion of the assignment is not easy at all; I\ngrade it harshly, especially since they have another opportunity to fix\ntheir mistakes and improve their grade. I suggest that they write once,\nthen go back and revise several times, just as their Expository Writing\n101 teachers taught. Writing about technical material is hard, and I\nencourage them to allocate time for doing this well, preferably over a\nperiod of several days, a little at a time.\n\n\n\n\nThe creativity portion of this assignment is only 5% because this assignment\nhas less room for creativity. I also include in that category doing\nextraordinary work, since this is a project on which it is quite possible to\n\"do more.\"", 
            "title": "POV Break C. Constructive solid geometry"
        }, 
        {
            "location": "/pov-break-c-resources/#project-information-for-instructors", 
            "text": "When my students do this project, I create a wiki page\u00a0in our course\nmanagement system (Blackboard) that contains instructions for how they can\npost their work to that wiki. \u00a0I create one central page with the list of\ntopics, and students claim a topic by editing that page and placing their\nname next to their chosen topic (first come, first served). \u00a0They make the\ntopic name a link to a new wiki page, and place all their writing there.  I provide two example tutorials already written,\u00a0as examples of the kind of\nwork I expect. \u00a0I usually create two such exmaples:   a reference image showcasing all of the\u00a0 wood.inc \u00a0and\u00a0 stones.inc \n     textures, with instructions on how to import those include files and\n     use them in your scene file  a tutorial on how to simulate focal blur in POV, with example images   I do not include those tutorials on this website, so that others who wish to\nassign those particular projects in other classes may do so.  I also encourage my students to improve upon their first draft,\u00a0by grading\nthat draft and offering them two options. \u00a0They can keep that grade and be\ndone, which students who do a great job on the first draft often do. \u00a0But as\nmost of us know, writing is hard, and many people do not get the grade they\nwant on their first draft. \u00a0My grading of it provides specific suggestions\nfor improvement, and those who choose to follow them can resubmit once, and\nI will update the grade according to how much of the suggestions they have\nimplemented.  I tell my students to write to a target audience of their classmates.\u00a0Assume\nthat a classmate may read your wiki page while working on a future project\nfor our course, hoping to put to immediate use what you've written. Assume\nthe reader has no POV knowledge beyond what you have, just what we've\nlearned in our course so far. Read your work critically and ask yourself,\n\"If I read someone else's post and it looked like this, would I understand\nit? Would I be able to use it in a project? Is there anything missing,\nconfusing, or inaccurate?\"  I use the following grading criteria.  \n   \n     \n      Claiming a topic, creating a wiki page for it, and inserting any kind of content\n     \n\n     \n      25%\n     \n   \n\n   \n     \n      Satisfying the requirement of including example work, images, and references\n     \n\n     \n      25%\n     \n   \n\n   \n     \n      Correctly following directions for submission\n     \n\n     \n      10%\n     \n   \n\n   \n     \n      Writing clearly for your target audience  (If this is difficult for you, pair up with a friend and read and criticize each other's work.  And remember, friends don't let friends submit confusing wiki pages.)\n     \n\n     \n      20%\n     \n   \n\n   \n     \n      Ensuring your work makes it easy for someone to use the topic you chose\n     \n\n     \n      15%\n     \n   \n\n   \n     \n      Creativity and/or artistry, or simply going beyond the call of duty\n     \n\n     \n      5%\n     \n     Again it is very easy to earn 60% by simply submitting information in the\ncorrect form, even if it is completely wrong and useless. That's generous of\nme, but of course 60% is not actually a passing grade.   Warning  The writing clearly portion of the assignment is not easy at all; I\ngrade it harshly, especially since they have another opportunity to fix\ntheir mistakes and improve their grade. I suggest that they write once,\nthen go back and revise several times, just as their Expository Writing\n101 teachers taught. Writing about technical material is hard, and I\nencourage them to allocate time for doing this well, preferably over a\nperiod of several days, a little at a time.   The creativity portion of this assignment is only 5% because this assignment\nhas less room for creativity. I also include in that category doing\nextraordinary work, since this is a project on which it is quite possible to\n\"do more.\"", 
            "title": "Project Information for Instructors"
        }, 
        {
            "location": "/pov-break-d-resources/", 
            "text": "This page contains links to all resources mentioned in POV Break D of the\ntextbook.\n\n\nThree Keys scene file\n\n\nClick to\u00a0\ndownload the POV source code\n\u00a0for the three\nkeys scene.\n\n\nTinker Toys files\n\n\nClick to \ndownload the INC file\n for the\nTinker Toys example project, or \ndownload the POV\nfile\n for the example Tinker Toys scene.\n\n\nProject Information for Instructors\n\n\nWhen my students do this project, I create a wiki page\u00a0in our course\nmanagement system (Blackboard) that contains instructions for how they can\npost their work to that wiki. \u00a0I create one central page that is empty, and\nstudents claim a category and a set of objects within it by editing the\ncentral page and creating a section for their category, and putting a few\nobjects within that section, attached to their name. \u00a0It might look like the\nexample shown below. \u00a0They make their name and object list a link to a new\nwiki page, and place all their writing there.\n\n\n\n\nFurniture\n\n\nCoffee table, sofa, and bookcase \n John Doe\n\n\nLamp, dining room table, and ottoman \n Jane Doe\n\n\nToys\n\n\nA variety of Lego bricks \n Juan Doe\n\n\n(etc.)\n\n\n\n\nEveryone is required to make different objects. Although more than one\nperson can work within a category, they cannot make the same objects.\n\n\nHaving the whole class share their material in a central location like this\nmakes it possible, in later projects, for students to use not only the few\nobjects they created in this project, but the many objects created by the\nentire class. \u00a0In my experience, many final projects take advantage of this\nrepository of objects. \u00a0It's nice for a student to see their work picked up\nby someone else and used in a new context; they can see that their work was\nappreciated and useful.\n\n\nHere are example categories I provide to give people ideas and guide them\ninto categories that are rather reusable.\n\n\n\n\n\n\nFurniture (chair, desk, lamp, bookshelf, etc.)\n\n\nReusable because: Lots of indoor scenes can be made to look more\nrealistic by adding some furniture.\n\n\n\n\n\n\nHouses (ranch, cape, mansion, high-rise apartment complex, castle,\n   etc.)\n\n\nReusable because:Lots of outdoor scenes can be made to look more\nrealistic by putting several common outdoor objects like houses together\nin the background (or the foreground).\n\n\n\n\n\n\nSigns (road signs, billboards, green interstate direction signs, rest\n   room signs, etc.)\n\n\nReusable because:These can be used to decorate any scene in which they\ncould realistically appear, and therefore add realism and detail.\n\n\n\n\n\n\nTableware (plates, cups, spoons, bowls, glasses, napkins, etc.)\n\n\nReusable because:Any still life scene could reasonably include objects\nlike these.\n\n\n\n\n\n\nFood (fruit, bread, cookies, etc.)\n\n\nReusable because:Same reason as previous\n\n\n\n\n\n\nOffice supplies (book, stapler, phone, pen, picture frame, coffee cup,\n   etc.)\n\n\nReusable because:Same reason as previous\n\n\n\n\n\n\nAny particular brand of toys (e.g., one category is Lego\nTM\n\n   blocks, another is Tinker Toys\nTM\n, another is Lincoln\n   Logs\nTM\n, etc.)\n\n\nReusable because: One could make an entire POV scene out of just one\ntype of toy. \u00a0The example I do for this project (which is already on the\nwiki) is done using Tinker Toys.\n\n\n\n\n\n\nAny other category you come up with,\n as longs as its objects are\n   likely to be usable in future scenes. E.g., bad ideas include \"electric\n   guitars\" and \"bunny slippers.\" Build something that you and/or your\n   classmates may find useful in future projects.\n\n\n\n\n\n\nI use the following grading criteria.\n\n\n\n  \n\n    \n\n      Appropriately staking your claim to three useful objects,\u00a0thereby ensuring that you do not duplicate someone else's work\n    \n\n\n    \n\n      15%\n    \n\n  \n\n\n  \n\n    \n\n      Creating three objects, and somewhere in your work\u00a0using one of the concepts documented in the POV tutorials our class created in the project from POV Break C\n (You must\u00a0state in your wiki post\u00a0which tutorial concept you used.)\n    \n\n\n    \n\n      15%\n    \n\n  \n\n\n  \n\n    \n\n      Including an image for each object you created\n    \n\n\n    \n\n      15% (5% each)\n    \n\n  \n\n\n  \n\n    \n\n      Including all the necessary specifications for each object you created\n    \n\n\n    \n\n      15% (5% each)\n    \n\n  \n\n\n  \n\n    \n\n      Including an example scene that uses your three objects together\n    \n\n\n    \n\n      10%\n    \n\n  \n\n\n  \n\n    \n\n      Ensuring your submission is clear so that others can easily use your objects\n    \n\n\n    \n\n      10%\n    \n\n  \n\n\n  \n\n    \n\n      Posting an .inc file that fits the requirements given in the text, and named after the pattern from the project in POV Break B\n (That is,\u00a0Project-D-Nathan-Carter.INC, but with your name instead.)\n    \n\n\n    \n\n      10%\n    \n\n  \n\n\n  \n\n    \n\n      Creativity and/or artistry, or simply going beyond the call of duty\n There is clearly room for creativity/artistry in this project, the first where you create original objects!\n    \n\n\n    \n\n      10%", 
            "title": "POV Break D. Reusable objects"
        }, 
        {
            "location": "/pov-break-d-resources/#three-keys-scene-file", 
            "text": "Click to\u00a0 download the POV source code \u00a0for the three\nkeys scene.", 
            "title": "Three Keys scene file"
        }, 
        {
            "location": "/pov-break-d-resources/#tinker-toys-files", 
            "text": "Click to  download the INC file  for the\nTinker Toys example project, or  download the POV\nfile  for the example Tinker Toys scene.", 
            "title": "Tinker Toys files"
        }, 
        {
            "location": "/pov-break-d-resources/#project-information-for-instructors", 
            "text": "When my students do this project, I create a wiki page\u00a0in our course\nmanagement system (Blackboard) that contains instructions for how they can\npost their work to that wiki. \u00a0I create one central page that is empty, and\nstudents claim a category and a set of objects within it by editing the\ncentral page and creating a section for their category, and putting a few\nobjects within that section, attached to their name. \u00a0It might look like the\nexample shown below. \u00a0They make their name and object list a link to a new\nwiki page, and place all their writing there.   Furniture  Coffee table, sofa, and bookcase   John Doe  Lamp, dining room table, and ottoman   Jane Doe  Toys  A variety of Lego bricks   Juan Doe  (etc.)   Everyone is required to make different objects. Although more than one\nperson can work within a category, they cannot make the same objects.  Having the whole class share their material in a central location like this\nmakes it possible, in later projects, for students to use not only the few\nobjects they created in this project, but the many objects created by the\nentire class. \u00a0In my experience, many final projects take advantage of this\nrepository of objects. \u00a0It's nice for a student to see their work picked up\nby someone else and used in a new context; they can see that their work was\nappreciated and useful.  Here are example categories I provide to give people ideas and guide them\ninto categories that are rather reusable.    Furniture (chair, desk, lamp, bookshelf, etc.)  Reusable because: Lots of indoor scenes can be made to look more\nrealistic by adding some furniture.    Houses (ranch, cape, mansion, high-rise apartment complex, castle,\n   etc.)  Reusable because:Lots of outdoor scenes can be made to look more\nrealistic by putting several common outdoor objects like houses together\nin the background (or the foreground).    Signs (road signs, billboards, green interstate direction signs, rest\n   room signs, etc.)  Reusable because:These can be used to decorate any scene in which they\ncould realistically appear, and therefore add realism and detail.    Tableware (plates, cups, spoons, bowls, glasses, napkins, etc.)  Reusable because:Any still life scene could reasonably include objects\nlike these.    Food (fruit, bread, cookies, etc.)  Reusable because:Same reason as previous    Office supplies (book, stapler, phone, pen, picture frame, coffee cup,\n   etc.)  Reusable because:Same reason as previous    Any particular brand of toys (e.g., one category is Lego TM \n   blocks, another is Tinker Toys TM , another is Lincoln\n   Logs TM , etc.)  Reusable because: One could make an entire POV scene out of just one\ntype of toy. \u00a0The example I do for this project (which is already on the\nwiki) is done using Tinker Toys.    Any other category you come up with,  as longs as its objects are\n   likely to be usable in future scenes. E.g., bad ideas include \"electric\n   guitars\" and \"bunny slippers.\" Build something that you and/or your\n   classmates may find useful in future projects.    I use the following grading criteria.  \n   \n     \n      Appropriately staking your claim to three useful objects,\u00a0thereby ensuring that you do not duplicate someone else's work\n     \n\n     \n      15%\n     \n   \n\n   \n     \n      Creating three objects, and somewhere in your work\u00a0using one of the concepts documented in the POV tutorials our class created in the project from POV Break C  (You must\u00a0state in your wiki post\u00a0which tutorial concept you used.)\n     \n\n     \n      15%\n     \n   \n\n   \n     \n      Including an image for each object you created\n     \n\n     \n      15% (5% each)\n     \n   \n\n   \n     \n      Including all the necessary specifications for each object you created\n     \n\n     \n      15% (5% each)\n     \n   \n\n   \n     \n      Including an example scene that uses your three objects together\n     \n\n     \n      10%\n     \n   \n\n   \n     \n      Ensuring your submission is clear so that others can easily use your objects\n     \n\n     \n      10%\n     \n   \n\n   \n     \n      Posting an .inc file that fits the requirements given in the text, and named after the pattern from the project in POV Break B  (That is,\u00a0Project-D-Nathan-Carter.INC, but with your name instead.)\n     \n\n     \n      10%\n     \n   \n\n   \n     \n      Creativity and/or artistry, or simply going beyond the call of duty  There is clearly room for creativity/artistry in this project, the first where you create original objects!\n     \n\n     \n      10%", 
            "title": "Project Information for Instructors"
        }, 
        {
            "location": "/pov-break-e-resources/", 
            "text": "This page contains links to all resources mentioned in POV Break E of the\ntextbook.\n\n\nVirtualDub for Windows\n\n\nThis POV Break introduces the software VirtualDub for Windows, the download\nlinks and installation instructions for which appear on \nthe Software\nPackages page of this site\n.\n\n\nTime Lapse Assembler for OS X\n\n\nThis POV Break introduces the software Time Lapse Assembler for Mac OS X,\nthe download links and installation instructions for which appear on \nthe\nSoftware Packages page of this site\n.\n\n\nAlternately, if you already have QuickTime Pro (which is not free software)\nyou can use it instead of Time Lapse Assembler, according to \nthe directions\non this web\nsite\n.\n\n\nConvert images to JPEG Service for OS X\n\n\nIf you use Time Lapse Assembler, still frames need to be in JPEG format. \u00a0To\nquickly convert a set of images to that format, use the Mac OS X Service I\nprovide on this website;\u00a0\ndownload it\nhere\n. Unzip it after\ndownloading and double-click the resulting \n.workflow\n file. OS X will show\nyou a prompt like the following one, asking if you want to install the\nservice on your computer.\n\n\n\n\nYou should choose Install, and thereafter you should find the service on the\nServices menu in Finder, when you have a set of image files selected. \u00a0See\nPOV Break E in the textbook for more information.\n\n\n13 Example Animation Types Video\n\n\nThis video showcases the 13 animation types covered in the text. \u00a0Although\nthe text includes still frames taken from some of these example animation\ntypes, the video obviously is a better representation, since it is animated,\nand it includes all 13 types rather than just a selection.\n\n\n\n\n\nFriedrich Lohm\u00fceller's Camera Animation Video\n\n\nView the video on Lohm\u00fceller's own site\n.\n\n\nProject information for Instructors\n\n\nBecause this project works best if you use it as preparation for the movie\nproject, I suggest that my students begin by choosing one or more objects\nthat they plan to include in their movie project, and animating those same\nobjects in this project also. They may need to create such objects if they\ndon't already have access to them. This project is designed to be work they\nwould mostly have to do as part of \nPOV Break F\n's\nproject anyway. It can serve as a rough draft or initial concepts that will\nform part of that later movie project. I do not\u00a0\nrequire\n that this project\nbe connected to the movie project; students who are\u00a0still uncertain about\nwhat their movie project will be may do this project on its own and figure\nthat out later.\n\n\nWhen my students do this project, I require them to post the results to a\nwiki on our learning management system, Blackboard. \u00a0I grade it out of 100%\naccording to the following breakdown, which I share with students in\nadvance. \u00a0This project is easy and this breakdown is generous, which\nencourages them to do the work of forming these essential skills in\npreparation for the much harder project in \nPOV Break\nF\n.\n\n\n\n  \n\n    \n\n      Posting three AVI files\n    \n\n\n    \n\n      10%\n    \n\n  \n\n\n  \n\n    \n\n      Doing so before the deadline\n    \n\n\n    \n\n      10%\n    \n\n  \n\n\n  \n\n    \n\n      Ensuring the first AVI file is a valid, web-viewable POV movie\n    \n\n\n    \n\n      10%\n    \n\n  \n\n\n  \n\n    \n\n      Ensuring the second AVI file is a valid, web-viewable POV movie\n    \n\n\n    \n\n      10%\n    \n\n  \n\n\n  \n\n    \n\n      Ensuring the third AVI file is a valid, web-viewable POV movie\n    \n\n\n    \n\n      10%\n    \n\n  \n\n\n  \n\n    \n\n      Having created at least one new object or piece of scenery\n    \n\n\n    \n\n      10%\n    \n\n  \n\n\n  \n\n    \n\n      Ensuring that your first AVI file is one of the types of animation\u00a0listed in POV Break E\n    \n\n\n    \n\n      10%\n    \n\n  \n\n\n  \n\n    \n\n      Ensuring that your second AVI file is a different type of animation than the first\n    \n\n\n    \n\n      10%\n    \n\n  \n\n\n  \n\n    \n\n      Ensuring that your third AVI file is a different type of animation than the first two\n    \n\n\n    \n\n      10%\n    \n\n  \n\n\n  \n\n    \n\n      Doing something unique, creative, cool, or impressive\n    \n\n\n    \n\n      10%", 
            "title": "POV Break E. First animations"
        }, 
        {
            "location": "/pov-break-e-resources/#virtualdub-for-windows", 
            "text": "This POV Break introduces the software VirtualDub for Windows, the download\nlinks and installation instructions for which appear on  the Software\nPackages page of this site .", 
            "title": "VirtualDub for Windows"
        }, 
        {
            "location": "/pov-break-e-resources/#time-lapse-assembler-for-os-x", 
            "text": "This POV Break introduces the software Time Lapse Assembler for Mac OS X,\nthe download links and installation instructions for which appear on  the\nSoftware Packages page of this site .  Alternately, if you already have QuickTime Pro (which is not free software)\nyou can use it instead of Time Lapse Assembler, according to  the directions\non this web\nsite .", 
            "title": "Time Lapse Assembler for OS X"
        }, 
        {
            "location": "/pov-break-e-resources/#convert-images-to-jpeg-service-for-os-x", 
            "text": "If you use Time Lapse Assembler, still frames need to be in JPEG format. \u00a0To\nquickly convert a set of images to that format, use the Mac OS X Service I\nprovide on this website;\u00a0 download it\nhere . Unzip it after\ndownloading and double-click the resulting  .workflow  file. OS X will show\nyou a prompt like the following one, asking if you want to install the\nservice on your computer.   You should choose Install, and thereafter you should find the service on the\nServices menu in Finder, when you have a set of image files selected. \u00a0See\nPOV Break E in the textbook for more information.", 
            "title": "Convert images to JPEG Service for OS X"
        }, 
        {
            "location": "/pov-break-e-resources/#13-example-animation-types-video", 
            "text": "This video showcases the 13 animation types covered in the text. \u00a0Although\nthe text includes still frames taken from some of these example animation\ntypes, the video obviously is a better representation, since it is animated,\nand it includes all 13 types rather than just a selection.", 
            "title": "13 Example Animation Types Video"
        }, 
        {
            "location": "/pov-break-e-resources/#friedrich-lohmuellers-camera-animation-video", 
            "text": "View the video on Lohm\u00fceller's own site .", 
            "title": "Friedrich Lohm\u00fceller's Camera Animation Video"
        }, 
        {
            "location": "/pov-break-e-resources/#project-information-for-instructors", 
            "text": "Because this project works best if you use it as preparation for the movie\nproject, I suggest that my students begin by choosing one or more objects\nthat they plan to include in their movie project, and animating those same\nobjects in this project also. They may need to create such objects if they\ndon't already have access to them. This project is designed to be work they\nwould mostly have to do as part of  POV Break F 's\nproject anyway. It can serve as a rough draft or initial concepts that will\nform part of that later movie project. I do not\u00a0 require  that this project\nbe connected to the movie project; students who are\u00a0still uncertain about\nwhat their movie project will be may do this project on its own and figure\nthat out later.  When my students do this project, I require them to post the results to a\nwiki on our learning management system, Blackboard. \u00a0I grade it out of 100%\naccording to the following breakdown, which I share with students in\nadvance. \u00a0This project is easy and this breakdown is generous, which\nencourages them to do the work of forming these essential skills in\npreparation for the much harder project in  POV Break\nF .  \n   \n     \n      Posting three AVI files\n     \n\n     \n      10%\n     \n   \n\n   \n     \n      Doing so before the deadline\n     \n\n     \n      10%\n     \n   \n\n   \n     \n      Ensuring the first AVI file is a valid, web-viewable POV movie\n     \n\n     \n      10%\n     \n   \n\n   \n     \n      Ensuring the second AVI file is a valid, web-viewable POV movie\n     \n\n     \n      10%\n     \n   \n\n   \n     \n      Ensuring the third AVI file is a valid, web-viewable POV movie\n     \n\n     \n      10%\n     \n   \n\n   \n     \n      Having created at least one new object or piece of scenery\n     \n\n     \n      10%\n     \n   \n\n   \n     \n      Ensuring that your first AVI file is one of the types of animation\u00a0listed in POV Break E\n     \n\n     \n      10%\n     \n   \n\n   \n     \n      Ensuring that your second AVI file is a different type of animation than the first\n     \n\n     \n      10%\n     \n   \n\n   \n     \n      Ensuring that your third AVI file is a different type of animation than the first two\n     \n\n     \n      10%\n     \n   \n\n   \n     \n      Doing something unique, creative, cool, or impressive\n     \n\n     \n      10%", 
            "title": "Project information for Instructors"
        }, 
        {
            "location": "/pov-break-f-resources/", 
            "text": "This page contains links to all resources mentioned in POV Break F of the\ntextbook.\n\n\nB\u00e9zier curves in POV\n\n\nAlso, you can\u00a0\ndownload bezier.inc\n\u00a0to add B\u00e9zier curve\ncapabilities to your POV files. \u00a0Instructions for using it appear in the\ncomments in a demo file;\u00a0\ndownload bezier-demo.pov\n\nto see.\n\n\nMovie Editing Software and Tutorials\n\n\n\n\n\nAs of erly 2018, Microsoft no longer has a page for downloading Windows Movie Maker.\n\nThis represents a change from the textbook, which was published in 2016,\nbefore this change was made.\n\n\nConsequently, I recommend that Windows users download\nthe cross-platform, free, open-source tool\n\nOpenShot\n that the text recommends for Linux users.\nSince the publication of the textbook, that produce has matured significantly\nand become available for both Windows and Mac systems as well.\n\n\nMacs come with iMovie already installed, but if you want a newer version\nthan the one you have, you can \nupdate through the Mac App\nStore\n. Tutorials\nfor iMovie are available on Apple's website\n\nhere\n\u00a0and\n\nhere\n.\nMac users are also free to try OpenShot, as mentioned above.\n\n\nLinux users can \nget OpenShot from its\nwebpage\n. Tutorials for OpenShot appear\n\non\nLinux.com\n\nand \non MediaCollege.com\n\n(an OpenShot sponsor).\n\n\nInformation for Instructors\n\n\nInstead of a final exam, my students do a final project, and we show them to\none another during the regularly scheduled final exam period. So although we\nall show up on the day of the \"final exam,\" there is no traditional exam,\nbut instead there are informal presentations of final projects (and voting\nfor a People's Choice award).\n\n\nThe final project is 15% of our course grade, and the breakdown for grading\nthe final project is given below.\n\n\nOn the day that we show our movies, during the ordinarily-scheduled final\nexam period, after all the movies have been seen, we take a vote for the\nPeople's Choice award. Each student lists their top 3 favorite movies (and\nthey are free to list their own) in decreasing order of preference. I later\ncompile the votes, giving #1 votes more credit than #2 votes, and #2 more\nthan #3, and rank movies based on their votes. This popularity vote is 10%\nof the project grade, as you can see below, which encourages creativity,\npolish, extra effort, etc.\n\n\nMy students may work on the final project individually or in pairs. Each\nproject receives one grade, which everyone who worked on the project earns.\nI encourage students to talk with classmates and me about their work on this\nproject, and consult any other kind of resource they see fit. But of course,\nno team should present anyone else's work as their own, in keeping with the\nusual academic integrity standards.\n\n\n\n\nTip\n\n\nI set aside a few class periods near the end of the semester for\ndiscussing these projects in class. I let the class choose what we\nshould discuss during those periods, and usually they end up being\nworkshops, in the sense that they are times when teams of two meet and\nwork together in class, while I move among them and answer individual\nquestions about difficulties with a specific detail of a scene, an\nobject, an animation, etc.\n\n\n\n\nI also place the following restrictions on my students' work.\n\n\n\n\nEach movie must use at least one of the POV features listed in the\n    suggested project at the end of POV Break C.\n\n\nIf a student/team chooses to include code written by others in their\n    movie, they must follow these important guidelines.\n\n\nGive credit where credit is due. (Cite whatever you use.)\n\n\nEnsure that at least one significant foreground object and some of\n    the background were created by the student/team, so that the\n    project involves more than just animating other people's stuff.\n\n\nNo imported code can count towards any of the other project\n    requirements. For example, if the student/team imports someone\n    else's really cool model of a human hand made with POV's blob\n    feature, that doesn't count as satisfying the POV Break C\n    requirement, because the use of the blob feature was not done by\n    the student/team.\n\n\n\n\n\n\nThe movie must have a title screen that includes the name(s) of the\n    student/team at the opening of the movie. This makes it easy for me to\n    compile a YouTube playlist of all the final projects, and each project\n    automatically introduces itself.\n\n\n\n\nEach student/team must give a presentation on the day we share our movies\nwith one another, during the regularly-scheduled final exam period. I ask\nthat the outline of each presentation be as follows. Students submit their\npresentation file electronically as described further below.\n\n\n\n\nDescribe how you planned your project. Feel free to show sketches,\n    early still scenes, or a story outline.\n\n\nDescribe how you divided the work (chronologically, and across team\n    members, if applicable) and which parts were the most time consuming or\n    difficult.\n\n\nMention which POV feature(s) you used from the suggested project in POV\n    Break C. Show a frame from your movie illustrating the feature in\n    question.\n\n\nMention where you used B\u00e9zier curves in your scene. Illustrate it with\n    a frame from your movie, or a sketch, or whatever you think is most\n    helpful.\n\n\nConclude by showing your movie, and let it speak for itself.\n\n\n\n\nEach movie must be submitted as follows.\n\n\n\n\nUpload the video to YouTube and email me the link to the video. If you\n    do not want it to be publicly visible, you make make it unlisted, but\n    it cannot be private, or I will not be able to view it.\n\n\nAttach to that email a copy of the presentation you will give to\n    introduce your movie. The reason for this is given below.\n\n\nYour presentation's last slide should be a link to your YouTube video,\n    so that you can just click the link to jump right there. When\n    presenting, try to show it full-screen, for the best audience\n    experience.\n\n\n\n\n\n\nWarning\n\n\nI require that this email arrive \none hour (or more) before the final\nexam period,\n so that I am able to put all presentation files onto the\nclassroom podium PC before the final exam period begins. (It wastes too\nmuch time if every single team inserts a pen drive and drags a\npresentation onto the podium PC before presenting. If I ensure that all\npresentations are in one folder on the desktop ready to go, everything\ngoes more smoothly and is less boring for the audience.)\n\n\n\n\nI also construct a YouTube playlist containing all final projects and email\nit to the class after the presentations, so that everyone can rewatch them\nat their leisure.\n\n\nThe final project grading sheet you can view by clicking here\n(PDF)\n shows in detail the grading\nbreakdown that I use for this project. The 10% marked \"People's Choice\" will\nbe awarded based on votes given by each student on presentation day, as\ndescribed above. It is essential to attend that day of class, so that each\nstudent/team can give their presentation, receive votes, and vote for\nothers.", 
            "title": "POV Break F. Your movie"
        }, 
        {
            "location": "/pov-break-f-resources/#bezier-curves-in-pov", 
            "text": "Also, you can\u00a0 download bezier.inc \u00a0to add B\u00e9zier curve\ncapabilities to your POV files. \u00a0Instructions for using it appear in the\ncomments in a demo file;\u00a0 download bezier-demo.pov \nto see.", 
            "title": "B\u00e9zier curves in POV"
        }, 
        {
            "location": "/pov-break-f-resources/#movie-editing-software-and-tutorials", 
            "text": "As of erly 2018, Microsoft no longer has a page for downloading Windows Movie Maker. This represents a change from the textbook, which was published in 2016,\nbefore this change was made.  Consequently, I recommend that Windows users download\nthe cross-platform, free, open-source tool OpenShot  that the text recommends for Linux users.\nSince the publication of the textbook, that produce has matured significantly\nand become available for both Windows and Mac systems as well.  Macs come with iMovie already installed, but if you want a newer version\nthan the one you have, you can  update through the Mac App\nStore . Tutorials\nfor iMovie are available on Apple's website here \u00a0and here .\nMac users are also free to try OpenShot, as mentioned above.  Linux users can  get OpenShot from its\nwebpage . Tutorials for OpenShot appear on\nLinux.com \nand  on MediaCollege.com \n(an OpenShot sponsor).", 
            "title": "Movie Editing Software and Tutorials"
        }, 
        {
            "location": "/pov-break-f-resources/#information-for-instructors", 
            "text": "Instead of a final exam, my students do a final project, and we show them to\none another during the regularly scheduled final exam period. So although we\nall show up on the day of the \"final exam,\" there is no traditional exam,\nbut instead there are informal presentations of final projects (and voting\nfor a People's Choice award).  The final project is 15% of our course grade, and the breakdown for grading\nthe final project is given below.  On the day that we show our movies, during the ordinarily-scheduled final\nexam period, after all the movies have been seen, we take a vote for the\nPeople's Choice award. Each student lists their top 3 favorite movies (and\nthey are free to list their own) in decreasing order of preference. I later\ncompile the votes, giving #1 votes more credit than #2 votes, and #2 more\nthan #3, and rank movies based on their votes. This popularity vote is 10%\nof the project grade, as you can see below, which encourages creativity,\npolish, extra effort, etc.  My students may work on the final project individually or in pairs. Each\nproject receives one grade, which everyone who worked on the project earns.\nI encourage students to talk with classmates and me about their work on this\nproject, and consult any other kind of resource they see fit. But of course,\nno team should present anyone else's work as their own, in keeping with the\nusual academic integrity standards.   Tip  I set aside a few class periods near the end of the semester for\ndiscussing these projects in class. I let the class choose what we\nshould discuss during those periods, and usually they end up being\nworkshops, in the sense that they are times when teams of two meet and\nwork together in class, while I move among them and answer individual\nquestions about difficulties with a specific detail of a scene, an\nobject, an animation, etc.   I also place the following restrictions on my students' work.   Each movie must use at least one of the POV features listed in the\n    suggested project at the end of POV Break C.  If a student/team chooses to include code written by others in their\n    movie, they must follow these important guidelines.  Give credit where credit is due. (Cite whatever you use.)  Ensure that at least one significant foreground object and some of\n    the background were created by the student/team, so that the\n    project involves more than just animating other people's stuff.  No imported code can count towards any of the other project\n    requirements. For example, if the student/team imports someone\n    else's really cool model of a human hand made with POV's blob\n    feature, that doesn't count as satisfying the POV Break C\n    requirement, because the use of the blob feature was not done by\n    the student/team.    The movie must have a title screen that includes the name(s) of the\n    student/team at the opening of the movie. This makes it easy for me to\n    compile a YouTube playlist of all the final projects, and each project\n    automatically introduces itself.   Each student/team must give a presentation on the day we share our movies\nwith one another, during the regularly-scheduled final exam period. I ask\nthat the outline of each presentation be as follows. Students submit their\npresentation file electronically as described further below.   Describe how you planned your project. Feel free to show sketches,\n    early still scenes, or a story outline.  Describe how you divided the work (chronologically, and across team\n    members, if applicable) and which parts were the most time consuming or\n    difficult.  Mention which POV feature(s) you used from the suggested project in POV\n    Break C. Show a frame from your movie illustrating the feature in\n    question.  Mention where you used B\u00e9zier curves in your scene. Illustrate it with\n    a frame from your movie, or a sketch, or whatever you think is most\n    helpful.  Conclude by showing your movie, and let it speak for itself.   Each movie must be submitted as follows.   Upload the video to YouTube and email me the link to the video. If you\n    do not want it to be publicly visible, you make make it unlisted, but\n    it cannot be private, or I will not be able to view it.  Attach to that email a copy of the presentation you will give to\n    introduce your movie. The reason for this is given below.  Your presentation's last slide should be a link to your YouTube video,\n    so that you can just click the link to jump right there. When\n    presenting, try to show it full-screen, for the best audience\n    experience.    Warning  I require that this email arrive  one hour (or more) before the final\nexam period,  so that I am able to put all presentation files onto the\nclassroom podium PC before the final exam period begins. (It wastes too\nmuch time if every single team inserts a pen drive and drags a\npresentation onto the podium PC before presenting. If I ensure that all\npresentations are in one folder on the desktop ready to go, everything\ngoes more smoothly and is less boring for the audience.)   I also construct a YouTube playlist containing all final projects and email\nit to the class after the presentations, so that everyone can rewatch them\nat their leisure.  The final project grading sheet you can view by clicking here\n(PDF)  shows in detail the grading\nbreakdown that I use for this project. The 10% marked \"People's Choice\" will\nbe awarded based on votes given by each student on presentation day, as\ndescribed above. It is essential to attend that day of class, so that each\nstudent/team can give their presentation, receive votes, and vote for\nothers.", 
            "title": "Information for Instructors"
        }, 
        {
            "location": "/pov-break-g-resources/", 
            "text": "This page contains links to all resources mentioned in POV Break G of the\ntextbook.\n\n\nSuggested code structure\n\n\nThe following code appears in the textbook, but is included here as well for\neasier copying and pasting into your own .pov scene files.\n\n\n// Declare the 16 points of the control net.\n\n\n\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\n#declare\n \nC11\n \n=\n \n0\n,\n0\n,\n0\n;\n\n\n#declare\n \nC12\n \n=\n \n0\n,\n0\n,\n1\n;\n\n\n#declare\n \nC13\n \n=\n \n0\n,\n0\n,\n2\n;\n\n\n#declare\n \nC14\n \n=\n \n0\n,\n0\n,\n3\n;\n\n\n#declare\n \nC21\n \n=\n \n1\n,\n0\n,\n0\n;\n\n\n#declare\n \nC22\n \n=\n \n1\n,\n0\n,\n1\n;\n\n\n#declare\n \nC23\n \n=\n \n1\n,\n0\n,\n2\n;\n\n\n#declare\n \nC24\n \n=\n \n1\n,\n0\n,\n3\n;\n\n\n#declare\n \nC31\n \n=\n \n2\n,\n0\n,\n0\n;\n\n\n#declare\n \nC32\n \n=\n \n2\n,\n0\n,\n1\n;\n\n\n#declare\n \nC33\n \n=\n \n2\n,\n0\n,\n2\n;\n\n\n#declare\n \nC34\n \n=\n \n2\n,\n0\n,\n3\n;\n\n\n#declare\n \nC41\n \n=\n \n3\n,\n0\n,\n0\n;\n\n\n#declare\n \nC42\n \n=\n \n3\n,\n0\n,\n1\n;\n\n\n#declare\n \nC43\n \n=\n \n3\n,\n0\n,\n2\n;\n\n\n#declare\n \nC44\n \n=\n \n3\n,\n0\n,\n3\n;\n\n\n\n// Use them to create the surface.\n\n\nbicubic_patch\n \n{\n\n  \ntype\n \n1\n \nflatness\n \n0\n \nu_steps\n \n5\n \nv_steps\n \n5\n\n  \nC11\n \nC12\n \nC13\n \nC14\n\n  \nC21\n \nC22\n \nC23\n \nC24\n\n  \nC31\n \nC32\n \nC33\n \nC34\n\n  \nC41\n \nC42\n \nC43\n \nC44\n\n  \npigment\n \n{\n \ncolor\n \nBlue\n \n}\n\n\n};\n\n\n\n// Use them to show the control net.\n\n\nunion\n \n{\n\n  \nsphere\n \n{\n \nC11\n,\n0.1\n \n}\n  \nsphere\n \n{\n \nC12\n,\n0.1\n \n}\n  \nsphere\n \n{\n \nC13\n,\n0.1\n \n}\n  \nsphere\n \n{\n \nC14\n,\n0.1\n \n}\n\n  \nsphere\n \n{\n \nC21\n,\n0.1\n \n}\n  \nsphere\n \n{\n \nC22\n,\n0.1\n \n}\n  \nsphere\n \n{\n \nC23\n,\n0.1\n \n}\n  \nsphere\n \n{\n \nC24\n,\n0.1\n \n}\n\n  \nsphere\n \n{\n \nC31\n,\n0.1\n \n}\n  \nsphere\n \n{\n \nC32\n,\n0.1\n \n}\n  \nsphere\n \n{\n \nC33\n,\n0.1\n \n}\n  \nsphere\n \n{\n \nC34\n,\n0.1\n \n}\n\n  \nsphere\n \n{\n \nC41\n,\n0.1\n \n}\n  \nsphere\n \n{\n \nC42\n,\n0.1\n \n}\n  \nsphere\n \n{\n \nC43\n,\n0.1\n \n}\n  \nsphere\n \n{\n \nC44\n,\n0.1\n \n}\n\n  \ncylinder\n \n{\n \nC11\n,\nC12\n,\n0.03\n \n}\n  \ncylinder\n \n{\n \nC12\n,\nC13\n,\n0.03\n \n}\n  \ncylinder\n \n{\n \nC13\n,\nC14\n,\n0.03\n \n}\n\n  \ncylinder\n \n{\n \nC21\n,\nC22\n,\n0.03\n \n}\n  \ncylinder\n \n{\n \nC22\n,\nC23\n,\n0.03\n \n}\n  \ncylinder\n \n{\n \nC23\n,\nC24\n,\n0.03\n \n}\n\n  \ncylinder\n \n{\n \nC31\n,\nC32\n,\n0.03\n \n}\n  \ncylinder\n \n{\n \nC32\n,\nC33\n,\n0.03\n \n}\n  \ncylinder\n \n{\n \nC33\n,\nC34\n,\n0.03\n \n}\n\n  \ncylinder\n \n{\n \nC41\n,\nC42\n,\n0.03\n \n}\n  \ncylinder\n \n{\n \nC42\n,\nC43\n,\n0.03\n \n}\n  \ncylinder\n \n{\n \nC43\n,\nC44\n,\n0.03\n \n}\n\n  \ncylinder\n \n{\n \nC11\n,\nC21\n,\n0.03\n \n}\n  \ncylinder\n \n{\n \nC21\n,\nC31\n,\n0.03\n \n}\n  \ncylinder\n \n{\n \nC31\n,\nC41\n,\n0.03\n \n}\n\n  \ncylinder\n \n{\n \nC12\n,\nC22\n,\n0.03\n \n}\n  \ncylinder\n \n{\n \nC22\n,\nC32\n,\n0.03\n \n}\n  \ncylinder\n \n{\n \nC32\n,\nC42\n,\n0.03\n \n}\n\n  \ncylinder\n \n{\n \nC13\n,\nC23\n,\n0.03\n \n}\n  \ncylinder\n \n{\n \nC23\n,\nC33\n,\n0.03\n \n}\n  \ncylinder\n \n{\n \nC33\n,\nC43\n,\n0.03\n \n}\n\n  \ncylinder\n \n{\n \nC14\n,\nC24\n,\n0.03\n \n}\n  \ncylinder\n \n{\n \nC24\n,\nC34\n,\n0.03\n \n}\n  \ncylinder\n \n{\n \nC34\n,\nC44\n,\n0.03\n \n}\n\n  \npigment\n \n{\n \ncolor\n \nGreen\n \n}\n\n\n}\n\n\n\n\n\nAnimations", 
            "title": "POV Break G. Advanced modeling"
        }, 
        {
            "location": "/pov-break-g-resources/#suggested-code-structure", 
            "text": "The following code appears in the textbook, but is included here as well for\neasier copying and pasting into your own .pov scene files.  // Declare the 16 points of the control net.  \ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc #declare   C11   =   0 , 0 , 0 ;  #declare   C12   =   0 , 0 , 1 ;  #declare   C13   =   0 , 0 , 2 ;  #declare   C14   =   0 , 0 , 3 ;  #declare   C21   =   1 , 0 , 0 ;  #declare   C22   =   1 , 0 , 1 ;  #declare   C23   =   1 , 0 , 2 ;  #declare   C24   =   1 , 0 , 3 ;  #declare   C31   =   2 , 0 , 0 ;  #declare   C32   =   2 , 0 , 1 ;  #declare   C33   =   2 , 0 , 2 ;  #declare   C34   =   2 , 0 , 3 ;  #declare   C41   =   3 , 0 , 0 ;  #declare   C42   =   3 , 0 , 1 ;  #declare   C43   =   3 , 0 , 2 ;  #declare   C44   =   3 , 0 , 3 ;  // Use them to create the surface.  bicubic_patch   { \n   type   1   flatness   0   u_steps   5   v_steps   5 \n   C11   C12   C13   C14 \n   C21   C22   C23   C24 \n   C31   C32   C33   C34 \n   C41   C42   C43   C44 \n   pigment   {   color   Blue   }  };  // Use them to show the control net.  union   { \n   sphere   {   C11 , 0.1   }    sphere   {   C12 , 0.1   }    sphere   {   C13 , 0.1   }    sphere   {   C14 , 0.1   } \n   sphere   {   C21 , 0.1   }    sphere   {   C22 , 0.1   }    sphere   {   C23 , 0.1   }    sphere   {   C24 , 0.1   } \n   sphere   {   C31 , 0.1   }    sphere   {   C32 , 0.1   }    sphere   {   C33 , 0.1   }    sphere   {   C34 , 0.1   } \n   sphere   {   C41 , 0.1   }    sphere   {   C42 , 0.1   }    sphere   {   C43 , 0.1   }    sphere   {   C44 , 0.1   } \n   cylinder   {   C11 , C12 , 0.03   }    cylinder   {   C12 , C13 , 0.03   }    cylinder   {   C13 , C14 , 0.03   } \n   cylinder   {   C21 , C22 , 0.03   }    cylinder   {   C22 , C23 , 0.03   }    cylinder   {   C23 , C24 , 0.03   } \n   cylinder   {   C31 , C32 , 0.03   }    cylinder   {   C32 , C33 , 0.03   }    cylinder   {   C33 , C34 , 0.03   } \n   cylinder   {   C41 , C42 , 0.03   }    cylinder   {   C42 , C43 , 0.03   }    cylinder   {   C43 , C44 , 0.03   } \n   cylinder   {   C11 , C21 , 0.03   }    cylinder   {   C21 , C31 , 0.03   }    cylinder   {   C31 , C41 , 0.03   } \n   cylinder   {   C12 , C22 , 0.03   }    cylinder   {   C22 , C32 , 0.03   }    cylinder   {   C32 , C42 , 0.03   } \n   cylinder   {   C13 , C23 , 0.03   }    cylinder   {   C23 , C33 , 0.03   }    cylinder   {   C33 , C43 , 0.03   } \n   cylinder   {   C14 , C24 , 0.03   }    cylinder   {   C24 , C34 , 0.03   }    cylinder   {   C34 , C44 , 0.03   } \n   pigment   {   color   Green   }  }", 
            "title": "Suggested code structure"
        }, 
        {
            "location": "/pov-break-g-resources/#animations", 
            "text": "", 
            "title": "Animations"
        }, 
        {
            "location": "/errata/", 
            "text": "Errata\n\n\nThis page lists known errors in the text, which will be fixed in\nfuture versions.  Thanks to those who reported errors, especially\nLarry Riddle of Agnes Scott College, who did a very thorough\nproofreading and is responsible for most of this list.\n\n\nChapter 4\n\n\nPage 95\n\n\nLine 2: The word \"into\" is repeated twice.\n\n\nExercise 4.37 says \"the while loop structure\" when it should say\n\"the \nfor\n loop structure.\"\n\n\nChapter 5\n\n\nPage 127\n\n\nThe first sentence of Exercise 5.23 says \"any linear function,\"\nbut it should say \"any affine transformation of the plane.\"  This\nis not relevant until part (e).\n\n\nPage 156\n\n\nExercise 6.36 should not say \"rotates the object about an\narbitrary line in space,\" but rather \"performs an ordinary POV\nrotation transformation centered on an arbitrary point in space.\"\nThen the example given makes more sense, and the exercise is less\ncomplex.\n\n\nPOV Break C\n\n\nPage 159\n\n\nThe code block on this page is missing some curly brackets.  The\ncorrect code block is shown here.\n\n\nunion {\n  sphere { \n-0.5,0,0\n, 0.25 } // forms the left end cap of the pill\n  sphere { \n 0.5,0,0\n, 0.25 } // forms the right end cap of the pill\n  cylinder { \n-0.5,0,0\n, \n0.5,0,0\n, 0.25 } // the middle section\n  pigment { color Wheat } // a predefined color, almost White\n}\n\n\n\n\nPage 166\n\n\nThe code block on this page is missing some affine transformations\nof the Doorstop.  The correct code block is shown here; only the\nfirst two lines of the difference block have been changed.\n\n\n#declare Cheese = difference {\n  // Start with the doorstop defined earlier, repositioned:\n  object { Doorstop scale 2.6 translate \n-0.5,-0.35,1\n }\n  // Remove all of these objects to make holes:\n  sphere { \n0,-0.5,0\n, 0.2 }\n  sphere { \n-0.75,-0.25,1.25\n, 0.4 }\n  sphere { \n-0.8,-1,-0.3\n, 0.3 }\n  sphere { \n-1.75,0.2,0.5\n, 0.2 }\n  sphere { \n0.7,-1.1,1\n, 0.3 }\n  // Change its color to yellow:\n  pigment { color BrightGold }\n}\n\n\n\n\nChapter 7\n\n\nPage 191\n\n\nThe first sentence of Exercise 7.14, as well as parts (a) and (b)\nshould be referencing Exercise 7.13, not Exercise 7.10.\n\n\nPage 192\n\n\nIn order for Exercises 7.17 and 7.18 to be consistent, we should\nalter Exercise 7.17 as follows.\n\n\nIn part (b), the cylinder endpoint \n(0,h,0)\n(0,h,0)\n should be \n(0,0,h)\n(0,0,h)\n.\n\n\nIn part (e), the cone endpoint \n(0,h,0)\n(0,h,0)\n should be \n(0,0,h)\n(0,0,h)\n.\n\n\nPage 194\n\n\nThe cylinder in the center of Figure 7.16 has the wrong equations\nbelow it.  They should read:\n\n\n    \nx^2-z^2=\\frac12\nx^2-z^2=\\frac12\n\n    \nx^2-z^2-\\frac12=0\nx^2-z^2-\\frac12=0\n\n    \nx*x-z*z-0.5\n\n\n\n\nChapter 8\n\n\nPage 209\n\n\nIn Exercise 8.10, parts (b) and (c) were written incorrectly.\nThey should be replaced with the following.\n\n\n(b) To combine two RGB colors subtractively, first compute their\nCMY equivalents, combine them additively, and then convert the\nresult back to an RGB vector.  Redo each vector combination in\nExercise 8.1, but this time use the procedure just described to\ncombine them subtractively.\n\n\n(c) Create a formula (the analog of (8.1)) for the subtractive\ncombination of two RGB color vectors \n\\langle r_1,g_1,b_1\\rangle\n\\langle r_1,g_1,b_1\\rangle\n\nand \n\\langle r_2,g_2,b_2\\rangle\n\\langle r_2,g_2,b_2\\rangle\n.\n\n\nPage 210\n\n\nExercise 8.13 should also contain this sentence:  Assume in each\ncase that \n\\langle h,1,1 \\rangle\n\\langle h,1,1 \\rangle\n corresponds to the RGB vector\n\n\\langle r,g,b \\rangle\n\\langle r,g,b \\rangle\n and write your answers in terms of\n\nr\nr\n, \ng\ng\n, \nb\nb\n, and \np\np\n.\n\n\nChapter 10\n\n\nPage 268\n\n\nThe equations above the graphs in Figure 10.7 should be\n\ny=h_2(x)\ny=h_2(x)\n (for the left graph) and \ny=h_3(x)\ny=h_3(x)\n (for the right\ngraph).\n\n\nPage 297\n\n\nIn Exercise 10.26, the hint is given to use the \n#debug\n command.\nHowever, that command does not display its messages in the POV-Ray\nMessages window.  So use the \n#warning\n command instead, which\nfunctions the same as \n#debug\n, but directs its messages to the\nPOV-Ray Messages window, where you can see them.\n\n\nChapter 11\n\n\nPage 299\n\n\nThe code block in Exercise 11.26 erroneously uses the POV reserved\nword \nend\n as a variable.  Another choice should have been made,\nsuch as \nstop\n:\n\n\n  LinearPath(start,stop,rad)\n\n\n\n\nChapter 12\n\n\nPage 336\n\n\nIn Exercise 12.29, the formula \nb_{i,n}(t)\nb_{i,n}(t)\n should be written\ninstead as \nb_{n,i}(t)\nb_{n,i}(t)\n, to be consistent with the notation in\nlater chapters.", 
            "title": "Errata"
        }, 
        {
            "location": "/errata/#errata", 
            "text": "This page lists known errors in the text, which will be fixed in\nfuture versions.  Thanks to those who reported errors, especially\nLarry Riddle of Agnes Scott College, who did a very thorough\nproofreading and is responsible for most of this list.", 
            "title": "Errata"
        }, 
        {
            "location": "/errata/#chapter-4", 
            "text": "", 
            "title": "Chapter 4"
        }, 
        {
            "location": "/errata/#page-95", 
            "text": "Line 2: The word \"into\" is repeated twice.  Exercise 4.37 says \"the while loop structure\" when it should say\n\"the  for  loop structure.\"", 
            "title": "Page 95"
        }, 
        {
            "location": "/errata/#chapter-5", 
            "text": "", 
            "title": "Chapter 5"
        }, 
        {
            "location": "/errata/#page-127", 
            "text": "The first sentence of Exercise 5.23 says \"any linear function,\"\nbut it should say \"any affine transformation of the plane.\"  This\nis not relevant until part (e).", 
            "title": "Page 127"
        }, 
        {
            "location": "/errata/#page-156", 
            "text": "Exercise 6.36 should not say \"rotates the object about an\narbitrary line in space,\" but rather \"performs an ordinary POV\nrotation transformation centered on an arbitrary point in space.\"\nThen the example given makes more sense, and the exercise is less\ncomplex.", 
            "title": "Page 156"
        }, 
        {
            "location": "/errata/#pov-break-c", 
            "text": "", 
            "title": "POV Break C"
        }, 
        {
            "location": "/errata/#page-159", 
            "text": "The code block on this page is missing some curly brackets.  The\ncorrect code block is shown here.  union {\n  sphere {  -0.5,0,0 , 0.25 } // forms the left end cap of the pill\n  sphere {   0.5,0,0 , 0.25 } // forms the right end cap of the pill\n  cylinder {  -0.5,0,0 ,  0.5,0,0 , 0.25 } // the middle section\n  pigment { color Wheat } // a predefined color, almost White\n}", 
            "title": "Page 159"
        }, 
        {
            "location": "/errata/#page-166", 
            "text": "The code block on this page is missing some affine transformations\nof the Doorstop.  The correct code block is shown here; only the\nfirst two lines of the difference block have been changed.  #declare Cheese = difference {\n  // Start with the doorstop defined earlier, repositioned:\n  object { Doorstop scale 2.6 translate  -0.5,-0.35,1  }\n  // Remove all of these objects to make holes:\n  sphere {  0,-0.5,0 , 0.2 }\n  sphere {  -0.75,-0.25,1.25 , 0.4 }\n  sphere {  -0.8,-1,-0.3 , 0.3 }\n  sphere {  -1.75,0.2,0.5 , 0.2 }\n  sphere {  0.7,-1.1,1 , 0.3 }\n  // Change its color to yellow:\n  pigment { color BrightGold }\n}", 
            "title": "Page 166"
        }, 
        {
            "location": "/errata/#chapter-7", 
            "text": "", 
            "title": "Chapter 7"
        }, 
        {
            "location": "/errata/#page-191", 
            "text": "The first sentence of Exercise 7.14, as well as parts (a) and (b)\nshould be referencing Exercise 7.13, not Exercise 7.10.", 
            "title": "Page 191"
        }, 
        {
            "location": "/errata/#page-192", 
            "text": "In order for Exercises 7.17 and 7.18 to be consistent, we should\nalter Exercise 7.17 as follows.  In part (b), the cylinder endpoint  (0,h,0) (0,h,0)  should be  (0,0,h) (0,0,h) .  In part (e), the cone endpoint  (0,h,0) (0,h,0)  should be  (0,0,h) (0,0,h) .", 
            "title": "Page 192"
        }, 
        {
            "location": "/errata/#page-194", 
            "text": "The cylinder in the center of Figure 7.16 has the wrong equations\nbelow it.  They should read: \n     x^2-z^2=\\frac12 x^2-z^2=\\frac12 \n     x^2-z^2-\\frac12=0 x^2-z^2-\\frac12=0 \n     x*x-z*z-0.5", 
            "title": "Page 194"
        }, 
        {
            "location": "/errata/#chapter-8", 
            "text": "", 
            "title": "Chapter 8"
        }, 
        {
            "location": "/errata/#page-209", 
            "text": "In Exercise 8.10, parts (b) and (c) were written incorrectly.\nThey should be replaced with the following.  (b) To combine two RGB colors subtractively, first compute their\nCMY equivalents, combine them additively, and then convert the\nresult back to an RGB vector.  Redo each vector combination in\nExercise 8.1, but this time use the procedure just described to\ncombine them subtractively.  (c) Create a formula (the analog of (8.1)) for the subtractive\ncombination of two RGB color vectors  \\langle r_1,g_1,b_1\\rangle \\langle r_1,g_1,b_1\\rangle \nand  \\langle r_2,g_2,b_2\\rangle \\langle r_2,g_2,b_2\\rangle .", 
            "title": "Page 209"
        }, 
        {
            "location": "/errata/#page-210", 
            "text": "Exercise 8.13 should also contain this sentence:  Assume in each\ncase that  \\langle h,1,1 \\rangle \\langle h,1,1 \\rangle  corresponds to the RGB vector \\langle r,g,b \\rangle \\langle r,g,b \\rangle  and write your answers in terms of r r ,  g g ,  b b , and  p p .", 
            "title": "Page 210"
        }, 
        {
            "location": "/errata/#chapter-10", 
            "text": "", 
            "title": "Chapter 10"
        }, 
        {
            "location": "/errata/#page-268", 
            "text": "The equations above the graphs in Figure 10.7 should be y=h_2(x) y=h_2(x)  (for the left graph) and  y=h_3(x) y=h_3(x)  (for the right\ngraph).", 
            "title": "Page 268"
        }, 
        {
            "location": "/errata/#page-297", 
            "text": "In Exercise 10.26, the hint is given to use the  #debug  command.\nHowever, that command does not display its messages in the POV-Ray\nMessages window.  So use the  #warning  command instead, which\nfunctions the same as  #debug , but directs its messages to the\nPOV-Ray Messages window, where you can see them.", 
            "title": "Page 297"
        }, 
        {
            "location": "/errata/#chapter-11", 
            "text": "", 
            "title": "Chapter 11"
        }, 
        {
            "location": "/errata/#page-299", 
            "text": "The code block in Exercise 11.26 erroneously uses the POV reserved\nword  end  as a variable.  Another choice should have been made,\nsuch as  stop :    LinearPath(start,stop,rad)", 
            "title": "Page 299"
        }, 
        {
            "location": "/errata/#chapter-12", 
            "text": "", 
            "title": "Chapter 12"
        }, 
        {
            "location": "/errata/#page-336", 
            "text": "In Exercise 12.29, the formula  b_{i,n}(t) b_{i,n}(t)  should be written\ninstead as  b_{n,i}(t) b_{n,i}(t) , to be consistent with the notation in\nlater chapters.", 
            "title": "Page 336"
        }
    ]
}